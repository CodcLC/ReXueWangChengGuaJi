{"version":3,"sources":["assets\\scripts\\SpineUtils.js"],"names":["t","require","e","module","o","exports","Object","defineProperty","value","SpineUtils","SpineInfo","a","i","changePartImgBundle","r","ResourceMgr","getInstance","loadRes","imgbundle","imgPath","cc","Texture2D","sys","isNative","n","middleware","setPixelsHigh","height","setPixelsWide","width","setNativeTexture","getImpl","updateRegion","diffWidth","diffHeight","offsetX","offsetY","handleLoadedTexture","s","getAtt","c","CreateRegion","region","setRegion","updateOffset","changePartImgTexture","updateSize","findSlot","skeletonData","getRuntimeData","findSlotIndex","findSkin","getAttachment","sp","SkeletonTexture","setRealTexture","spine","TextureAtlasPage","name","uWrap","TextureWrap","ClampToEdge","vWrap","texture","setWraps","TextureAtlasRegion","page","originalWidth","originalHeight","rotate","u","v","u2","v2"],"mappings":"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","sourceRoot":"/","sourcesContent":["var t = require;\nvar e = module;\nvar o = exports;\nObject.defineProperty(o, \"__esModule\", {\n    value: !0\n}),\no.SpineUtils = o.SpineInfo = void 0;\nvar a = t(\"ResourceMgr\");\no.SpineInfo = function() {};\nvar i = function() {\n    function t() {}\n    return t.changePartImgBundle = function(t, e, o, i) {\n        var r = this;\n        a.ResourceMgr.getInstance().loadRes(i.imgbundle, i.imgPath, cc.Texture2D,\n        function(a) {\n            if (cc.sys.isNative) {\n                var n = new middleware.Texture2D;\n                n.setPixelsHigh(a.height),\n                n.setPixelsWide(a.width),\n                n.setNativeTexture(a.getImpl()),\n                t.updateRegion(e, n, i.diffWidth, i.diffHeight, i.offsetX, i.offsetY)\n            } else {\n                a.handleLoadedTexture(!0);\n                var s = r.getAtt(t, e, o),\n                c = r.CreateRegion(a, i);\n                s.region = c,\n                s && (s.setRegion(c), s.updateOffset())\n            }\n        })\n    },\n    t.changePartImgTexture = function(t, e, o, a, i) {\n        if (a.handleLoadedTexture(!0), cc.sys.isNative) {\n            var r = new middleware.Texture2D;\n            r.setPixelsHigh(a.height),\n            r.setPixelsWide(a.width),\n            r.setNativeTexture(a.getImpl()),\n            t.updateRegion(e, r, i.diffWidth, i.diffHeight, i.offsetX, i.offsetY)\n        } else {\n            var n = this.getAtt(t, e, o),\n            s = this.CreateRegion(a, i);\n            n.region = s,\n            n && (n.setRegion(s), this.updateSize(n), n.updateOffset())\n        }\n    },\n    t.getAtt = function(t, e, o) {\n        t.findSlot(e);\n        var a = t.skeletonData.getRuntimeData(),\n        i = a.findSlotIndex(e);\n        return a.findSkin(\"default\").getAttachment(i, o)\n    },\n    t.CreateRegion = function(t, e) {\n        var o = new sp.SkeletonTexture;\n        o.setRealTexture(t);\n        var a = new sp.spine.TextureAtlasPage;\n        a.name = t.name,\n        a.uWrap = sp.spine.TextureWrap.ClampToEdge,\n        a.vWrap = sp.spine.TextureWrap.ClampToEdge,\n        a.texture = o,\n        a.texture.setWraps(a.uWrap, a.vWrap),\n        a.width = t.width,\n        a.height = t.height;\n        var i = new sp.spine.TextureAtlasRegion;\n        return i.page = a,\n        i.width = t.width,\n        i.height = t.height,\n        i.originalWidth = e.diffWidth ? t.width + e.diffWidth: t.width,\n        i.originalHeight = e.diffHeight ? t.height + e.diffHeight: t.height,\n        i.offsetX = e.offsetX ? e.offsetX: 0,\n        i.offsetY = e.offsetY ? e.offsetY: 0,\n        i.rotate = !1,\n        i.u = 0,\n        i.v = 0,\n        i.u2 = 1,\n        i.v2 = 1,\n        i.texture = o,\n        i\n    },\n    t.updateSize = function() {},\n    t\n} ();\no.SpineUtils = i"]}