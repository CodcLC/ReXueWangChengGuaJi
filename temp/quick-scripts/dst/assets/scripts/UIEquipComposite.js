
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/UIEquipComposite.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd3f04ndWAxA+7aq+0sL8aOE', 'UIEquipComposite');
// scripts/UIEquipComposite.js

"use strict";

var t = require;
var e = module;
var o = exports;

var _a,
    i = void 0 && (void 0).__extends || (_a = function a(t, e) {
  return (_a = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (t, e) {
    t.__proto__ = e;
  } || function (t, e) {
    for (var o in e) {
      Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
    }
  })(t, e);
}, function (t, e) {
  function o() {
    this.constructor = t;
  }

  _a(t, e), t.prototype = null === e ? Object.create(e) : (o.prototype = e.prototype, new o());
}),
    r = void 0 && (void 0).__decorate || function (t, e, o, a) {
  var i,
      r = arguments.length,
      n = r < 3 ? e : null === a ? a = Object.getOwnPropertyDescriptor(e, o) : a;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) n = Reflect.decorate(t, e, o, a);else for (var s = t.length - 1; s >= 0; s--) {
    (i = t[s]) && (n = (r < 3 ? i(n) : r > 3 ? i(e, o, n) : i(e, o)) || n);
  }
  return r > 3 && n && Object.defineProperty(e, o, n), n;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});

var n = t("BaseUI"),
    s = t("BaseButton"),
    c = t("SdkMgr"),
    l = t("TweenMgr"),
    u = t("UIMgr"),
    p = t("Utils"),
    g = t("Main"),
    d = t("Config"),
    h = t("TrackDataEvent"),
    f = t("DataMgr"),
    m = t("EquipMgr"),
    y = t("PlayerMgr"),
    v = t("NodeEquipComposite"),
    I = cc._decorator,
    k = I.ccclass,
    C = I.property,
    S = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    return e.BtnBack = null, e.BtnComposite = null, e.NodeComposite = null, e.NodeCompositeEquip = null, e.NodeEquip = null, e.NodeInfo = null, e.PrefabEquip = null, e.NodeBagItem = null, e.LabPageNum = null, e.PageViewBag = null, e.ContentBag = null, e.Indicator = null, e.NodeEFf_HC = null, e.NodeCost = null, e.LabCost = null, e.NodeVideo = null, e.LayoutProp = null, e.LayoutNodeProp = null, e.LabName = null, e.curPageIndex = 0, e.curBagIndexCount = 100, e.nodePageList = [], e.nodeBagItemList = [], e.nodeEquipItemList = [], e.dataEquipItemList = [], e.introductionEquipData = null, e.equipCompositeList = [], e.isLoadEnd = !1, e.lookVideoCount = 0, e.curBagList = [], e;
  }

  return i(e, t), e.prototype.init = function (t) {
    this.introductionEquipData = t;
  }, e.prototype.onLoad = function () {
    this.registerEvent();
  }, e.prototype.start = function () {
    g["default"].instance.destroyPlayer_Home(), this.registerBtnEvent(), this.initData(), this.initView(), this.LayoutProp.destroyAllChildren(), this.scheduleOnce(this.changeNodeInfo);
  }, e.prototype.registerEvent = function () {
    this.addEvent(d.EventName.PlaceCompositeEquip, this.recognitionCompositeList);
  }, e.prototype.initData = function () {
    this.equipCompositeList.length = 3;
  }, e.prototype.initView = function () {
    this.loadPageNum(), this.initCompositeView();
  }, e.prototype.initCurPage = function () {
    this.curPageIndex = this.PageViewBag.getCurrentPageIndex();
  }, e.prototype.jumpCurPage = function () {
    this.PageViewBag.setCurrentPageIndex(0), this.curPageIndex = this.PageViewBag.getCurrentPageIndex();
  }, e.prototype.registerBtnEvent = function () {
    var t = this;
    this.BtnBack.on(cc.Node.EventType.TOUCH_END, function () {
      t.lookVideoCount > 0 ? u.UIMgr.getInstance().openUI(d.UIID.UIGeneralWindow1, -1, "", "<color = #000000>切换装备或退出界面\n当前视频进度将</c><color = #ff0000>不予保存</c>噢！", null, function () {
        u.UIMgr.getInstance().openUI(d.UIID.UIEquip, -1), t.closeView();
      }, null) : (u.UIMgr.getInstance().openUI(d.UIID.UIEquip, -1), t.closeView());
    }), this.BtnComposite.on(cc.Node.EventType.TOUCH_END, function () {
      if (t.BtnComposite.getComponent(s.BaseButton).interactable) if (t.isFullForCompositeIndex()) {
        var e = t.equipCompositeList[0].starLevel ? t.equipCompositeList[0].starLevel : 0,
            o = f.DataMgr.getInstance().getEquipStarCfg(t.equipCompositeList[0].id, e).consume;

        if (y.PlayerMgr.getInstance().geUserData().subGoldNum(o)) {
          y.PlayerMgr.getInstance().getTrackData().getCountHC() < 10 && (y.PlayerMgr.getInstance().getTrackData().addCountHC(), y.PlayerMgr.getInstance().getTrackData().youmengTrack(h.TrackId.refine_time_X, y.PlayerMgr.getInstance().getTrackData().getCountHC())), y.PlayerMgr.getInstance().getTrackData().youmengTrack(h.TrackId.refine_equip_X, t.equipCompositeList[0].id), y.PlayerMgr.getInstance().getTrackData().youmengTrack(h.TrackId.refine_equip_lv_X, e + 1);
          var a,
              i = m["default"].getInstance().getEquipSellValue_QH(t.equipCompositeList[0].id, t.equipCompositeList[0].type, t.equipCompositeList[0].IDCard, t.equipCompositeList[0]) + m["default"].getInstance().getEquipSellValue_QH(t.equipCompositeList[1].id, t.equipCompositeList[1].type, t.equipCompositeList[1].IDCard, t.equipCompositeList[1]) + m["default"].getInstance().getEquipSellValue_QH(t.equipCompositeList[2].id, t.equipCompositeList[2].type, t.equipCompositeList[2].IDCard, t.equipCompositeList[2]);

          if (t.equipCompositeList[0].isWear) {
            var r = y.PlayerMgr.getInstance().geUserData().getEquipIDCard();
            a = {
              id: t.equipCompositeList[0].id,
              type: t.equipCompositeList[0].type,
              quality: t.equipCompositeList[0].quality,
              strengthenLv: 0,
              isUnlock: t.equipCompositeList[0].isUnlock,
              isWear: t.equipCompositeList[0].isWear,
              videoCount: 0,
              IDCard: r,
              starLevel: e + 1
            }, y.PlayerMgr.getInstance().geUserData().setEquip(a, !1), y.PlayerMgr.getInstance().geUserData().abandonEquip(t.equipCompositeList[1]), y.PlayerMgr.getInstance().geUserData().abandonEquip(t.equipCompositeList[2]);
          } else t.equipCompositeList[1].isWear ? (r = y.PlayerMgr.getInstance().geUserData().getEquipIDCard(), a = {
            id: t.equipCompositeList[1].id,
            type: t.equipCompositeList[1].type,
            quality: t.equipCompositeList[1].quality,
            strengthenLv: 0,
            isUnlock: t.equipCompositeList[1].isUnlock,
            isWear: !1,
            videoCount: 0,
            IDCard: r,
            starLevel: e + 1
          }, y.PlayerMgr.getInstance().geUserData().setEquip(a, !1), y.PlayerMgr.getInstance().geUserData().abandonEquip(t.equipCompositeList[0]), y.PlayerMgr.getInstance().geUserData().abandonEquip(t.equipCompositeList[2])) : t.equipCompositeList[2].isWear ? (r = y.PlayerMgr.getInstance().geUserData().getEquipIDCard(), a = {
            id: t.equipCompositeList[2].id,
            type: t.equipCompositeList[2].type,
            quality: t.equipCompositeList[2].quality,
            strengthenLv: 0,
            isUnlock: t.equipCompositeList[2].isUnlock,
            isWear: !1,
            videoCount: 0,
            IDCard: r,
            starLevel: e + 1
          }, y.PlayerMgr.getInstance().geUserData().setEquip(a, !1), y.PlayerMgr.getInstance().geUserData().unloadEquip(t.equipCompositeList[2]), y.PlayerMgr.getInstance().geUserData().abandonEquip(t.equipCompositeList[0]), y.PlayerMgr.getInstance().geUserData().abandonEquip(t.equipCompositeList[1])) : t.equipCompositeList[0].isWear || t.equipCompositeList[1].isWear || t.equipCompositeList[2].isWear || (r = y.PlayerMgr.getInstance().geUserData().getEquipIDCard(), a = {
            id: t.equipCompositeList[0].id,
            type: t.equipCompositeList[0].type,
            quality: t.equipCompositeList[0].quality,
            strengthenLv: 0,
            isUnlock: t.equipCompositeList[0].isUnlock,
            isWear: t.equipCompositeList[0].isWear,
            videoCount: 0,
            IDCard: r,
            starLevel: e + 1
          }, y.PlayerMgr.getInstance().geUserData().addEquip(a), y.PlayerMgr.getInstance().geUserData().abandonEquip(t.equipCompositeList[0]), y.PlayerMgr.getInstance().geUserData().abandonEquip(t.equipCompositeList[1]), y.PlayerMgr.getInstance().geUserData().abandonEquip(t.equipCompositeList[2]), t.addBagItemForIndex(a));

          t.playHCEff(function () {
            u.UIMgr.getInstance().openUI(d.UIID.UICompositeEnd, -1, a, function () {
              i > 0 && (y.PlayerMgr.getInstance().geUserData().addGoldNum(i), u.UIMgr.getInstance().openUI(d.UIID.UITips, -1, "合成成功，返回强化消耗 金币x" + i));
            });
          }), t.clearCompositeIndex(), t.clearCompositeData(), t.introductionEquipData = null, t.hideNodeInfo(), t.filtrateEquip(null), t.loadBagPage(t.curBagList), t.refreshBtnState(!1);
        }
      } else u.UIMgr.getInstance().openUI(d.UIID.UITips, -1, "请添加合成装备");
    });

    for (var e = function e(_e) {
      var a = o.NodeComposite.getChildByName("NodeCompositeEquip" + _e);
      cc.isValid(a) && a.on(cc.Node.EventType.TOUCH_END, function () {
        if (0 == _e) {
          t.introductionEquipData = null, t.hideNodeInfo();
          var o = t.NodeComposite.getChildByName("NodeCompositeEquip0"),
              i = t.NodeComposite.getChildByName("NodeCompositeEquip1"),
              r = t.NodeComposite.getChildByName("NodeCompositeEquip2"),
              n = t.equipCompositeList[0];
          t.equipCompositeList[0] = null;
          var s = t.equipCompositeList[1];
          t.equipCompositeList[1] = null;
          var c = t.equipCompositeList[2];
          return t.equipCompositeList[2] = null, t.refreshBtnState(!1), cc.isValid(o.getChildByName("NodeEquip")) && o.getChildByName("NodeEquip").destroy(), cc.isValid(i.getChildByName("NodeEquip")) && i.getChildByName("NodeEquip").destroy(), cc.isValid(r.getChildByName("NodeEquip")) && r.getChildByName("NodeEquip").destroy(), void (t.isNullForCompositeIndex() ? (t.refreshVideoState(!1), cc.isValid(t.NodeCompositeEquip.getChildByName("NodeEquip")) && t.NodeCompositeEquip.getChildByName("NodeEquip").destroy(), t.filtrateEquip(null), t.loadBagPage(t.curBagList)) : (t.refreshVideoState(!0), t.addBagItemForIndex(n), t.addBagItemForIndex(s), t.addBagItemForIndex(c)));
        }

        if (t.equipCompositeList[_e]) if (t.lookVideoCount > 0) u.UIMgr.getInstance().openUI(d.UIID.UIGeneralWindow1, -1, "", "<color = #000000>切换装备或退出界面\n当前视频进度将</c><color = #ff0000>不予保存</c>噢！", null, function () {
          var o = t.equipCompositeList[_e];
          t.equipCompositeList[_e] = null, cc.isValid(a.getChildByName("NodeEquip")) && a.getChildByName("NodeEquip").destroy(), t.refreshBtnState(!1), t.isNullForCompositeIndex() ? (t.refreshVideoState(!1), cc.isValid(t.NodeCompositeEquip.getChildByName("NodeEquip")) && t.NodeCompositeEquip.getChildByName("NodeEquip").destroy(), t.filtrateEquip(null), t.loadBagPage(t.curBagList)) : (t.refreshVideoState(!0), t.addBagItemForIndex(o));
        }, null);else {
          var l = t.equipCompositeList[_e];
          t.equipCompositeList[_e] = null, cc.isValid(a.getChildByName("NodeEquip")) && a.getChildByName("NodeEquip").destroy(), t.refreshBtnState(!1), t.isNullForCompositeIndex() ? (t.refreshVideoState(!1), cc.isValid(t.NodeCompositeEquip.getChildByName("NodeEquip")) && t.NodeCompositeEquip.getChildByName("NodeEquip").destroy(), t.filtrateEquip(null), t.loadBagPage(t.curBagList)) : (t.refreshVideoState(!0), t.addBagItemForIndex(l));
        }
      });
    }, o = this, a = 0; a < 3; a++) {
      e(a);
    }

    this.NodeVideo.on(cc.Node.EventType.TOUCH_END, function () {
      c.SdkMgr.getInstance().playVideo(1, function () {
        if (y.PlayerMgr.getInstance().getTrackData().youmengTrack(h.TrackId.refine_getequip), t.lookVideoCount += 1, t.refreshVideoState(!0), t.lookVideoCount >= t.getNeedVideoCount()) {
          t.NodeVideo.active = !1;

          for (var e = void 0, o = 0; o < t.equipCompositeList.length; o++) {
            if (t.equipCompositeList[o]) {
              e = {
                id: t.equipCompositeList[o].id,
                type: t.equipCompositeList[o].type,
                quality: t.equipCompositeList[o].quality,
                strengthenLv: 0,
                isUnlock: !0,
                isWear: !1,
                videoCount: 0,
                IDCard: y.PlayerMgr.getInstance().geUserData().getEquipIDCard(),
                starLevel: t.equipCompositeList[o].starLevel
              };
              break;
            }
          }

          e ? (y.PlayerMgr.getInstance().getTrackData().youmengTrack(h.TrackId.refine_equip_get_X, e.id), t.lookVideoCount = 0, y.PlayerMgr.getInstance().geUserData().addEquip(e), t.addToCompositeIndex(e), t.refreshBtnState(!0)) : t.lookVideoCount -= 1;
        }
      });
    });
  }, e.prototype.loadPageNum = function () {
    if (this.nodePageList || (this.nodePageList = []), this.nodePageList.length > 0) for (var t = 0; t < this.nodePageList.length; t++) {
      cc.isValid(this.nodePageList[t]) && (this.curPageIndex == t ? this.nodePageList[t].color = cc.color(191, 108, 0) : this.nodePageList[t].color = cc.color(255, 255, 255));
    } else for (t = 0; t < this.Indicator.childrenCount; t++) {
      if (cc.isValid(this.Indicator.children[t])) {
        var e = cc.instantiate(this.LabPageNum);
        e.parent = this.Indicator.children[t], e.position = cc.Vec3.ZERO, e.getComponent(cc.Label).string = "" + (t + 1), this.curPageIndex == t && (e.color = cc.color(191, 108, 0)), this.nodePageList.push(e);
      }
    }
  }, e.prototype.refreshBtnState = function (t) {
    this.NodeCost.active = t, this.BtnComposite.getComponent(s.BaseButton).interactable = t, t && this.refreshHCCost();
  }, e.prototype.refreshHCCost = function () {
    for (var t, e = 0; e < this.equipCompositeList.length; e++) {
      if (this.equipCompositeList[e]) {
        t = this.equipCompositeList[e];
        break;
      }
    }

    this.LabCost.string = t ? f.DataMgr.getInstance().getEquipStarCfg(t.id, t.starLevel).consume.toString() : "0";
  }, e.prototype.refreshVideoState = function (t) {
    if (this.NodeVideo.active = t, t) {
      for (var e = 1, o = 0; o < this.equipCompositeList.length; o++) {
        if (!this.equipCompositeList[o]) {
          e = o;
          break;
        }
      }

      var a = this.NodeComposite.getChildByName("NodeCompositeEquip" + e),
          i = p.Utils.posTransform(a.parent, a.getPosition(), this.NodeVideo.parent);
      this.NodeVideo.setPosition(i), this.refreshLookVideoCount();
    } else this.lookVideoCount = 0;
  }, e.prototype.getNeedVideoCount = function () {
    for (var t, e = 0; e < this.equipCompositeList.length; e++) {
      if (this.equipCompositeList[e]) {
        t = this.equipCompositeList[e];
        break;
      }
    }

    return f.DataMgr.getInstance().getEquipStarCfg(t.id, t.starLevel).AdvertisementNum;
  }, e.prototype.refreshLookVideoCount = function () {
    var t = this.getNeedVideoCount();
    t || (this.NodeVideo.active = !1), this.NodeVideo.getChildByName("LabVideo").getComponent(cc.Label).string = this.lookVideoCount + "/" + t;
  }, e.prototype.recognitionCompositeList = function (t, e) {
    var o = this;
    if (this.isLoadEnd) if (this.lookVideoCount > 0) u.UIMgr.getInstance().openUI(d.UIID.UIGeneralWindow1, -1, "", "<color = #000000>切换装备或退出界面\n当前视频进度将</c><color = #ff0000>不予保存</c>噢！", null, function () {
      o.isFullForCompositeIndex() ? u.UIMgr.getInstance().openUI(d.UIID.UITips, -1, "合成栏已满") : (o.destroyBagItemforIndex(t), o.isNullForCompositeIndex() && (o.jumpCurPage(), o.filtrateEquip(e), o.loadBagPage(o.curBagList)), o.addToCompositeIndex(e));
    }, null);else {
      if (this.isFullForCompositeIndex()) return void u.UIMgr.getInstance().openUI(d.UIID.UITips, -1, "合成栏已满");
      this.destroyBagItemforIndex(t), this.isNullForCompositeIndex() && (this.jumpCurPage(), this.filtrateEquip(e), this.loadBagPage(this.curBagList)), this.addToCompositeIndex(e);
    }
  }, e.prototype.initCompositeView = function () {
    this.addToCompositeIndex(this.introductionEquipData), this.filtrateEquip(this.introductionEquipData), this.loadBagPage(this.curBagList);
  }, e.prototype.loadBagPage = function (t) {
    this.clearEquipAndData();

    for (var e = t, o = 0; o < 8; o++) {
      var a = this.ContentBag.children[o];
      this.loadBagItem(a, !1, o, e);
    }
  }, e.prototype.loadBagItem = function (t, e, o, a) {
    var i = this;
    (!a || a.length <= 0) && (this.isLoadEnd = !0);

    for (var r = function r(e) {
      n.scheduleOnce(function () {
        var r = e + 18 * o,
            n = null;
        cc.isValid(i.nodeBagItemList[r]) ? n = i.nodeBagItemList[r] : ((n = cc.instantiate(i.NodeBagItem)).parent = t, n.position = cc.Vec3.ZERO, i.nodeBagItemList.push(n)), a.length > r && (i.loadEquipToBag(r, n, a[r]), r == i.curBagList.length - 1 && (i.isLoadEnd = !0));
      }, .01 * (e + 18 * o));
    }, n = this, s = 0; s < 18; s++) {
      r(s);
    }
  }, e.prototype.loadEquipToBag = function (t, e, o) {
    var a = cc.instantiate(this.PrefabEquip);
    a.parent = e, m["default"].getInstance().playEffForQuality(a, o.quality), a.getComponent(v["default"]).initData(t, o, d.UIID.UIEquip);
    var i = f.DataMgr.getInstance().getEquipCfg(o.id);
    this.loadSpriteFrame(i.bundleQuality, i.iconQuality, function (t) {
      a.getComponent(cc.Sprite).spriteFrame = t;
    }), this.loadSpriteFrame(i.bundle, i.equipIcon, function (t) {
      a.getChildByName("SpIcon").getComponent(cc.Sprite).spriteFrame = t;
    }), o.strengthenLv > 0 ? (a.getChildByName("LabStrengthenLv").active = !0, a.getChildByName("LabStrengthenLv").getComponent(cc.Label).string = "+" + o.strengthenLv) : a.getChildByName("LabStrengthenLv").active = !1;
    var r = o.starLevel ? o.starLevel : 0;

    if (r > 0) {
      var n = a.getChildByName("NodeStar");
      n.active = !0;

      for (var s = 0; s < n.childrenCount; s++) {
        r > s ? cc.isValid(n.children[s]) && (n.children[s].getChildByName("SpStar").active = !0) : cc.isValid(n.children[s]) && (n.children[s].getChildByName("SpStar").active = !1);
      }
    }

    this.isNullForCompositeIndex() || this.getCompositeEquipQualityNum(o) && this.getCompositeEquipStarNum2(o) || (a.getChildByName("SpMask").active = !0), this.nodeEquipItemList.length > t ? (this.nodeEquipItemList[t] = a, this.dataEquipItemList[t] = o) : (this.nodeEquipItemList.push(a), this.dataEquipItemList.push(o));
  }, e.prototype.destroyBagItemforIndex = function (t) {
    if (this.nodeBagItemList && !(t >= this.nodeBagItemList.length || t < 0)) {
      var e = this.nodeBagItemList[t].children[0];
      cc.isValid(e) && (e.destroy(), t < this.nodeEquipItemList.length && (this.nodeEquipItemList[t] = null, this.dataEquipItemList[t] = null));
    }
  }, e.prototype.addBagItemForIndex = function (t, e) {
    if (void 0 === e && (e = null), this.nodeBagItemList && t) {
      var o = e;

      if (null == o) {
        o = this.nodeEquipItemList.length;

        for (var a = 0; a < this.nodeEquipItemList.length; a++) {
          if (!this.nodeEquipItemList[a]) {
            o = a;
            break;
          }
        }
      }

      var i = this.nodeBagItemList[o];
      cc.isValid(i) && this.loadEquipToBag(o, i, t);
    }
  }, e.prototype.addToCompositeIndex = function (t) {
    if (t) {
      for (var e = -1, o = 0; o < this.equipCompositeList.length; o++) {
        if (!this.equipCompositeList[o]) {
          0 == o && (this.introductionEquipData = t, this.LayoutProp.destroyAllChildren(), this.scheduleOnce(this.changeNodeInfo), this.scheduleOnce(this.showNodeInfo)), this.equipCompositeList[o] = t, e = o;
          break;
        }
      }

      if (-1 != e) {
        var a = this.NodeComposite.getChildByName("NodeCompositeEquip" + e),
            i = f.DataMgr.getInstance().getEquipCfg(t.id),
            r = cc.instantiate(this.NodeEquip);
        a.addChild(r), this.loadSpriteFrame(i.bundleQuality, i.iconQuality, function (t) {
          r.getComponent(cc.Sprite).spriteFrame = t;
        }), this.loadSpriteFrame(i.bundle, i.equipIcon, function (t) {
          r.getChildByName("SpIcon").getComponent(cc.Sprite).spriteFrame = t;
        }), t.strengthenLv > 0 ? (r.getChildByName("LabStrengthenLv").active = !0, r.getChildByName("LabStrengthenLv").getComponent(cc.Label).string = "+" + t.strengthenLv) : r.getChildByName("LabStrengthenLv").active = !1;
        var n = t.starLevel ? t.starLevel : 0;
        if (n > 0) for ((c = r.getChildByName("NodeStar")).active = !0, o = 0; o < c.childrenCount; o++) {
          n > o ? cc.isValid(c.children[o]) && (c.children[o].getChildByName("SpStar").active = !0) : cc.isValid(c.children[o]) && (c.children[o].getChildByName("SpStar").active = !1);
        }

        if (!cc.isValid(this.NodeCompositeEquip.getChildByName("NodeEquip"))) {
          var s = cc.instantiate(this.NodeEquip);
          this.NodeCompositeEquip.addChild(s), this.loadSpriteFrame(i.bundleQuality, i.iconQuality, function (t) {
            s.getComponent(cc.Sprite).spriteFrame = t;
          }), this.loadSpriteFrame(i.bundle, i.equipIcon, function (t) {
            s.getChildByName("SpIcon").getComponent(cc.Sprite).spriteFrame = t;
          });
          var c,
              u = t.starLevel ? t.starLevel + 1 : 1;
          if (u > 0) for ((c = s.getChildByName("NodeStar")).active = !0, o = 0; o < c.childrenCount; o++) {
            u > o ? cc.isValid(c.children[o]) && (c.children[o].getChildByName("SpStar").active = !0, u == o + 1 && l.TweenMgr.getInstance().playBlinkAnim(c.children[o].getChildByName("SpStar"))) : cc.isValid(c.children[o]) && (c.children[o].getChildByName("SpStar").active = !1);
          }
        }

        this.isFullForCompositeIndex() ? (this.refreshBtnState(!0), this.refreshVideoState(!1)) : (this.refreshBtnState(!1), this.refreshVideoState(!0));
      }
    }
  }, e.prototype.clearEquipAndData = function () {
    this.isLoadEnd = !1;

    for (var t = 0; t < this.nodeBagItemList.length; t++) {
      cc.isValid(this.nodeBagItemList[t]) && this.nodeBagItemList[t].childrenCount > 0 && this.nodeBagItemList[t].children[0].destroy();
    }

    this.nodeEquipItemList = [], this.dataEquipItemList = [];
  }, e.prototype.filtrateEquip = function (t) {
    if (this.curBagList = [], t) {
      var e = m["default"].getInstance().getOwmedEquipForQualityId(t.quality),
          o = [],
          a = [];

      for (r = 0; r < e.length; r++) {
        e[r].quality == t.quality ? e[r].IDCard != t.IDCard && (o.push(e[r]), o.sort(function (t, e) {
          return t.starLevel - e.starLevel;
        })) : a.push(e[r]);
      }

      for (this.curBagList = o, r = 0; r < a.length; r++) {
        this.curBagList.push(a[r]);
      }
    } else {
      for (var i = m["default"].getInstance().getOwnedEquipList(), r = 0; r < i.length; r++) {
        this.curBagList.push(i[r]);
      }

      this.curBagList.sort(function (t, e) {
        return e.quality - t.quality;
      });
    }
  }, e.prototype.getCompositeEquipStarNum = function (t) {
    for (var e = !1, o = 0; o < this.equipCompositeList.length; o++) {
      if (this.equipCompositeList[o]) {
        t.id == this.equipCompositeList[o].id && t.starLevel == this.equipCompositeList[o].starLevel && (e = !0);
        break;
      }
    }

    return e;
  }, e.prototype.getCompositeEquipStarNum2 = function (t) {
    for (var e = !1, o = 0; o < this.equipCompositeList.length; o++) {
      if (this.equipCompositeList[o]) {
        t.starLevel == this.equipCompositeList[o].starLevel && (e = !0);
        break;
      }
    }

    return e;
  }, e.prototype.getCompositeEquipQualityNum = function (t) {
    for (var e = !1, o = 0; o < this.equipCompositeList.length; o++) {
      if (this.equipCompositeList[o]) {
        t.quality == this.equipCompositeList[o].quality && (e = !0);
        break;
      }
    }

    return e;
  }, e.prototype.isFullForCompositeIndex = function () {
    for (var t = !0, e = 0; e < this.equipCompositeList.length; e++) {
      if (!this.equipCompositeList[e]) {
        t = !1;
        break;
      }
    }

    return t;
  }, e.prototype.isNullForCompositeIndex = function () {
    for (var t = !0, e = 0; e < this.equipCompositeList.length; e++) {
      this.equipCompositeList[e] && (t = !1);
    }

    return t;
  }, e.prototype.clearCompositeIndex = function () {
    for (var t = 0; t < this.NodeComposite.childrenCount; t++) {
      cc.isValid(this.NodeComposite.children[t].getChildByName("NodeEquip")) && this.NodeComposite.children[t].getChildByName("NodeEquip").destroy();
    }
  }, e.prototype.clearCompositeData = function () {
    for (var t = 0; t < this.equipCompositeList.length; t++) {
      this.equipCompositeList[t] = null;
    }
  }, e.prototype.playHCEff = function (t) {
    var e = this;
    this.NodeEFf_HC.node.active = !0, this.NodeEFf_HC.getComponent(sp.Skeleton).setAnimation(0, "ani1", !1), this.NodeEFf_HC.getComponent(sp.Skeleton).setCompleteListener(function () {
      e.NodeEFf_HC.node.active = !1, t && t();
    });
  }, e.prototype.callbackPageView = function () {
    this.initCurPage(), this.loadPageNum();
  }, e.prototype.closeView = function () {
    this.closeUI();
  }, e.prototype.showNodeInfo = function () {
    this.NodeInfo.active = !0;
  }, e.prototype.hideNodeInfo = function () {
    this.NodeInfo.active = !1;
  }, e.prototype.changeNodeInfo = function () {
    var t = f.DataMgr.getInstance().getEquipCfg(this.introductionEquipData.id);

    if (this.LabName.string = t.equipName, t.LvAtk) {
      var e = p.Utils.getTabelArr(t.atk),
          o = p.Utils.getTabelArr(t.LvAtk),
          a = ["0", "0"];

      if (this.introductionEquipData.starLevel && this.introductionEquipData.starLevel > 0) {
        var i = f.DataMgr.getInstance().getEquipStarCfg(this.introductionEquipData.id, this.introductionEquipData.starLevel);
        a = p.Utils.getTabelArr(i.atk);
      }

      var r = Number(e[0]) + Number(o[0]) * this.introductionEquipData.strengthenLv + Number(a[0]),
          n = Number(e[1]) + Number(o[1]) * this.introductionEquipData.strengthenLv + Number(a[1]),
          s = this.LayoutProp.getChildByName("LayoutProp1");
      cc.isValid(s) || ((s = cc.instantiate(this.LayoutNodeProp)).parent = this.LayoutProp, s.name = "LayoutProp1");
      var c = n - r;
      s.getChildByName("LabProp").getComponent(cc.RichText).string = "<color=#ffffff>攻击力：</c><color=#3bacf3>" + r + "~" + n + "</color>", this.loadPropChange(8, s, c);
    }

    if (t.LvHp) {
      var l = this.introductionEquipData.starLevel ? f.DataMgr.getInstance().getEquipStarCfg(this.introductionEquipData.id, this.introductionEquipData.starLevel).hp : 0;
      this.addPropNode(9, t.hp + t.LvHp * this.introductionEquipData.strengthenLv + l);
    }

    t.atkSpeed && (l = this.introductionEquipData.starLevel ? f.DataMgr.getInstance().getEquipStarCfg(this.introductionEquipData.id, this.introductionEquipData.starLevel).atkSpeed : 0, this.addPropNode(3, t.atkSpeed + l)), t.atkCrazyProb && (l = this.introductionEquipData.starLevel ? f.DataMgr.getInstance().getEquipStarCfg(this.introductionEquipData.id, this.introductionEquipData.starLevel).atkCrazyProb : 0, this.addPropNode(4, t.atkCrazyProb + l)), t.atkCrazyHurt && (l = this.introductionEquipData.starLevel ? f.DataMgr.getInstance().getEquipStarCfg(this.introductionEquipData.id, this.introductionEquipData.starLevel).atkCrazyHurt : 0, this.addPropNode(5, t.atkCrazyHurt + l)), t.subHurt && (l = this.introductionEquipData.starLevel ? f.DataMgr.getInstance().getEquipStarCfg(this.introductionEquipData.id, this.introductionEquipData.starLevel).subHurt : 0, this.addPropNode(6, t.subHurt + l)), t.dodgeHurtProb && (l = this.introductionEquipData.starLevel ? f.DataMgr.getInstance().getEquipStarCfg(this.introductionEquipData.id, this.introductionEquipData.starLevel).dodgeHurtProb : 0, this.addPropNode(7, t.dodgeHurtProb + l));
  }, e.prototype.addPropNode = function (t, e) {
    var o = this.LayoutProp.getChildByName("LayoutProp" + t);
    cc.isValid(o) || ((o = cc.instantiate(this.LayoutNodeProp)).parent = this.LayoutProp, o.name = "LayoutProp" + t);
    var a = m["default"].getInstance().getPropNameForPropType(t);
    o.getChildByName("LabProp").getComponent(cc.RichText).string = "<color=#ffffff>" + a + "：</c><color=#3bacf3>" + e + m["default"].getInstance().getPropPercent(t) + "</color>", this.loadPropChange(t, o, e);
  }, e.prototype.loadPropChange = function (t, e, o) {
    var a = e.getChildByName("SpChange"),
        i = e.getChildByName("LabChange");

    if (cc.isValid(a) && cc.isValid(i)) {
      var r = 0,
          n = f.DataMgr.getInstance().getEquipStarCfg(this.introductionEquipData.id, this.introductionEquipData.starLevel);

      if (8 == t) {
        var s = p.Utils.getTabelArr(n.atk);
        r = (Number(s[1]) + Number(s[0])) / 2 - 0;
      } else 9 == t ? r = n.hp - 0 : 3 == t ? r = n.atkSpeed - 0 : 4 == t ? r = n.atkCrazyProb - 0 : 5 == t ? r = n.atkCrazyHurt - 0 : 6 == t ? r = n.subHurt - 0 : 7 == t && (r = n.dodgeHurtProb - 0);

      0 == r ? (a.active = !1, i.active = !1) : (i.color = r > 0 ? cc.color(64, 220, 47) : cc.color(246, 47, 0), i.getComponent(cc.Label).string = 8 == t ? Math.ceil(o) + "~" + Math.ceil(r + o) : "" + Math.ceil(Math.abs(r + o)));
    } else console.log("不存在！！！");
  }, r([C(cc.Node)], e.prototype, "BtnBack", void 0), r([C(cc.Node)], e.prototype, "BtnComposite", void 0), r([C({
    type: cc.Node,
    tooltip: "装备合成节点"
  })], e.prototype, "NodeComposite", void 0), r([C({
    type: cc.Node,
    tooltip: "装备合成位"
  })], e.prototype, "NodeCompositeEquip", void 0), r([C({
    type: cc.Node,
    tooltip: "合成装备"
  })], e.prototype, "NodeEquip", void 0), r([C({
    type: cc.Node,
    tooltip: "装备信息"
  })], e.prototype, "NodeInfo", void 0), r([C({
    type: cc.Prefab,
    tooltip: "装备预制"
  })], e.prototype, "PrefabEquip", void 0), r([C({
    type: cc.Node,
    tooltip: "背包空壳item"
  })], e.prototype, "NodeBagItem", void 0), r([C({
    type: cc.Node,
    tooltip: "背包页数标签"
  })], e.prototype, "LabPageNum", void 0), r([C(cc.PageView)], e.prototype, "PageViewBag", void 0), r([C(cc.Node)], e.prototype, "ContentBag", void 0), r([C(cc.Node)], e.prototype, "Indicator", void 0), r([C(sp.Skeleton)], e.prototype, "NodeEFf_HC", void 0), r([C(cc.Node)], e.prototype, "NodeCost", void 0), r([C(cc.Label)], e.prototype, "LabCost", void 0), r([C(cc.Node)], e.prototype, "NodeVideo", void 0), r([C(cc.Node)], e.prototype, "LayoutProp", void 0), r([C(cc.Node)], e.prototype, "LayoutNodeProp", void 0), r([C(cc.Label)], e.prototype, "LabName", void 0), r([k], e);
}(n["default"]);

o["default"] = S;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcVUlFcXVpcENvbXBvc2l0ZS5qcyJdLCJuYW1lcyI6WyJ0IiwicmVxdWlyZSIsImUiLCJtb2R1bGUiLCJvIiwiZXhwb3J0cyIsImEiLCJpIiwiX19leHRlbmRzIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJBcnJheSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImNvbnN0cnVjdG9yIiwiY3JlYXRlIiwiciIsIl9fZGVjb3JhdGUiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJuIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiUmVmbGVjdCIsImRlY29yYXRlIiwicyIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJjIiwibCIsInUiLCJwIiwiZyIsImQiLCJoIiwiZiIsIm0iLCJ5IiwidiIsIkkiLCJjYyIsIl9kZWNvcmF0b3IiLCJrIiwiY2NjbGFzcyIsIkMiLCJwcm9wZXJ0eSIsIlMiLCJhcHBseSIsIkJ0bkJhY2siLCJCdG5Db21wb3NpdGUiLCJOb2RlQ29tcG9zaXRlIiwiTm9kZUNvbXBvc2l0ZUVxdWlwIiwiTm9kZUVxdWlwIiwiTm9kZUluZm8iLCJQcmVmYWJFcXVpcCIsIk5vZGVCYWdJdGVtIiwiTGFiUGFnZU51bSIsIlBhZ2VWaWV3QmFnIiwiQ29udGVudEJhZyIsIkluZGljYXRvciIsIk5vZGVFRmZfSEMiLCJOb2RlQ29zdCIsIkxhYkNvc3QiLCJOb2RlVmlkZW8iLCJMYXlvdXRQcm9wIiwiTGF5b3V0Tm9kZVByb3AiLCJMYWJOYW1lIiwiY3VyUGFnZUluZGV4IiwiY3VyQmFnSW5kZXhDb3VudCIsIm5vZGVQYWdlTGlzdCIsIm5vZGVCYWdJdGVtTGlzdCIsIm5vZGVFcXVpcEl0ZW1MaXN0IiwiZGF0YUVxdWlwSXRlbUxpc3QiLCJpbnRyb2R1Y3Rpb25FcXVpcERhdGEiLCJlcXVpcENvbXBvc2l0ZUxpc3QiLCJpc0xvYWRFbmQiLCJsb29rVmlkZW9Db3VudCIsImN1ckJhZ0xpc3QiLCJpbml0Iiwib25Mb2FkIiwicmVnaXN0ZXJFdmVudCIsInN0YXJ0IiwiaW5zdGFuY2UiLCJkZXN0cm95UGxheWVyX0hvbWUiLCJyZWdpc3RlckJ0bkV2ZW50IiwiaW5pdERhdGEiLCJpbml0VmlldyIsImRlc3Ryb3lBbGxDaGlsZHJlbiIsInNjaGVkdWxlT25jZSIsImNoYW5nZU5vZGVJbmZvIiwiYWRkRXZlbnQiLCJFdmVudE5hbWUiLCJQbGFjZUNvbXBvc2l0ZUVxdWlwIiwicmVjb2duaXRpb25Db21wb3NpdGVMaXN0IiwibG9hZFBhZ2VOdW0iLCJpbml0Q29tcG9zaXRlVmlldyIsImluaXRDdXJQYWdlIiwiZ2V0Q3VycmVudFBhZ2VJbmRleCIsImp1bXBDdXJQYWdlIiwic2V0Q3VycmVudFBhZ2VJbmRleCIsIm9uIiwiTm9kZSIsIkV2ZW50VHlwZSIsIlRPVUNIX0VORCIsIlVJTWdyIiwiZ2V0SW5zdGFuY2UiLCJvcGVuVUkiLCJVSUlEIiwiVUlHZW5lcmFsV2luZG93MSIsIlVJRXF1aXAiLCJjbG9zZVZpZXciLCJnZXRDb21wb25lbnQiLCJCYXNlQnV0dG9uIiwiaW50ZXJhY3RhYmxlIiwiaXNGdWxsRm9yQ29tcG9zaXRlSW5kZXgiLCJzdGFyTGV2ZWwiLCJEYXRhTWdyIiwiZ2V0RXF1aXBTdGFyQ2ZnIiwiaWQiLCJjb25zdW1lIiwiUGxheWVyTWdyIiwiZ2VVc2VyRGF0YSIsInN1YkdvbGROdW0iLCJnZXRUcmFja0RhdGEiLCJnZXRDb3VudEhDIiwiYWRkQ291bnRIQyIsInlvdW1lbmdUcmFjayIsIlRyYWNrSWQiLCJyZWZpbmVfdGltZV9YIiwicmVmaW5lX2VxdWlwX1giLCJyZWZpbmVfZXF1aXBfbHZfWCIsImdldEVxdWlwU2VsbFZhbHVlX1FIIiwidHlwZSIsIklEQ2FyZCIsImlzV2VhciIsImdldEVxdWlwSURDYXJkIiwicXVhbGl0eSIsInN0cmVuZ3RoZW5MdiIsImlzVW5sb2NrIiwidmlkZW9Db3VudCIsInNldEVxdWlwIiwiYWJhbmRvbkVxdWlwIiwidW5sb2FkRXF1aXAiLCJhZGRFcXVpcCIsImFkZEJhZ0l0ZW1Gb3JJbmRleCIsInBsYXlIQ0VmZiIsIlVJQ29tcG9zaXRlRW5kIiwiYWRkR29sZE51bSIsIlVJVGlwcyIsImNsZWFyQ29tcG9zaXRlSW5kZXgiLCJjbGVhckNvbXBvc2l0ZURhdGEiLCJoaWRlTm9kZUluZm8iLCJmaWx0cmF0ZUVxdWlwIiwibG9hZEJhZ1BhZ2UiLCJyZWZyZXNoQnRuU3RhdGUiLCJnZXRDaGlsZEJ5TmFtZSIsImlzVmFsaWQiLCJkZXN0cm95IiwiaXNOdWxsRm9yQ29tcG9zaXRlSW5kZXgiLCJyZWZyZXNoVmlkZW9TdGF0ZSIsIlNka01nciIsInBsYXlWaWRlbyIsInJlZmluZV9nZXRlcXVpcCIsImdldE5lZWRWaWRlb0NvdW50IiwiYWN0aXZlIiwicmVmaW5lX2VxdWlwX2dldF9YIiwiYWRkVG9Db21wb3NpdGVJbmRleCIsImNvbG9yIiwiY2hpbGRyZW5Db3VudCIsImNoaWxkcmVuIiwiaW5zdGFudGlhdGUiLCJwYXJlbnQiLCJwb3NpdGlvbiIsIlZlYzMiLCJaRVJPIiwiTGFiZWwiLCJzdHJpbmciLCJwdXNoIiwicmVmcmVzaEhDQ29zdCIsInRvU3RyaW5nIiwiVXRpbHMiLCJwb3NUcmFuc2Zvcm0iLCJnZXRQb3NpdGlvbiIsInNldFBvc2l0aW9uIiwicmVmcmVzaExvb2tWaWRlb0NvdW50IiwiQWR2ZXJ0aXNlbWVudE51bSIsImRlc3Ryb3lCYWdJdGVtZm9ySW5kZXgiLCJjbGVhckVxdWlwQW5kRGF0YSIsImxvYWRCYWdJdGVtIiwibG9hZEVxdWlwVG9CYWciLCJwbGF5RWZmRm9yUXVhbGl0eSIsImdldEVxdWlwQ2ZnIiwibG9hZFNwcml0ZUZyYW1lIiwiYnVuZGxlUXVhbGl0eSIsImljb25RdWFsaXR5IiwiU3ByaXRlIiwic3ByaXRlRnJhbWUiLCJidW5kbGUiLCJlcXVpcEljb24iLCJnZXRDb21wb3NpdGVFcXVpcFF1YWxpdHlOdW0iLCJnZXRDb21wb3NpdGVFcXVpcFN0YXJOdW0yIiwic2hvd05vZGVJbmZvIiwiYWRkQ2hpbGQiLCJUd2Vlbk1nciIsInBsYXlCbGlua0FuaW0iLCJnZXRPd21lZEVxdWlwRm9yUXVhbGl0eUlkIiwic29ydCIsImdldE93bmVkRXF1aXBMaXN0IiwiZ2V0Q29tcG9zaXRlRXF1aXBTdGFyTnVtIiwibm9kZSIsInNwIiwiU2tlbGV0b24iLCJzZXRBbmltYXRpb24iLCJzZXRDb21wbGV0ZUxpc3RlbmVyIiwiY2FsbGJhY2tQYWdlVmlldyIsImNsb3NlVUkiLCJlcXVpcE5hbWUiLCJMdkF0ayIsImdldFRhYmVsQXJyIiwiYXRrIiwiTnVtYmVyIiwibmFtZSIsIlJpY2hUZXh0IiwibG9hZFByb3BDaGFuZ2UiLCJMdkhwIiwiaHAiLCJhZGRQcm9wTm9kZSIsImF0a1NwZWVkIiwiYXRrQ3JhenlQcm9iIiwiYXRrQ3JhenlIdXJ0Iiwic3ViSHVydCIsImRvZGdlSHVydFByb2IiLCJnZXRQcm9wTmFtZUZvclByb3BUeXBlIiwiZ2V0UHJvcFBlcmNlbnQiLCJNYXRoIiwiY2VpbCIsImFicyIsImNvbnNvbGUiLCJsb2ciLCJ0b29sdGlwIiwiUHJlZmFiIiwiUGFnZVZpZXciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBQyxHQUFHQyxPQUFSO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxNQUFSO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxPQUFSOztBQUNBLElBQUlDLEVBQUo7QUFBQSxJQUFPQyxDQUFDLEdBQUcsVUFBUSxTQUFLQyxTQUFiLEtBQTJCRixFQUFDLEdBQUcsV0FBU04sQ0FBVCxFQUFZRSxDQUFaLEVBQWU7RUFDckQsT0FBTyxDQUFDSSxFQUFDLEdBQUdHLE1BQU0sQ0FBQ0MsY0FBUCxJQUF5QjtJQUNqQ0MsU0FBUyxFQUFFO0VBRHNCLGFBRzFCQyxLQUgwQixJQUlyQyxVQUFTWixDQUFULEVBQVlFLENBQVosRUFBZTtJQUNYRixDQUFDLENBQUNXLFNBQUYsR0FBY1QsQ0FBZDtFQUNILENBTlcsSUFPWixVQUFTRixDQUFULEVBQVlFLENBQVosRUFBZTtJQUNYLEtBQUssSUFB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QXNoQlBLLENBQUMsQ0FBQyxDQUFDMkIsQ0FBQyxDQUFDSixFQUFFLENBQUM2RCxJQUFKLENBQUYsQ0FBRCxFQUFlcEcsQ0FBQyxDQUFDVyxTQUFqQixFQUE0QixnQkFBNUIsRUFBOEMsS0FBSyxDQUFuRCxDQXRoQk0sRUF1aEJQSyxDQUFDLENBQUMsQ0FBQzJCLENBQUMsQ0FBQ0osRUFBRSxDQUFDdUksS0FBSixDQUFGLENBQUQsRUFBZ0I5SyxDQUFDLENBQUNXLFNBQWxCLEVBQTZCLFNBQTdCLEVBQXdDLEtBQUssQ0FBN0MsQ0F2aEJNLEVBd2hCUEssQ0FBQyxDQUFDLENBQUN5QixDQUFELENBQUQsRUFBTXpDLENBQU4sQ0F4aEJEO0FBeWhCSCxDQTVqQkcsQ0E0akJEb0IsQ0FBQyxXQTVqQkEsQ0FoQko7O0FBNmtCQWxCLENBQUMsV0FBRCxHQUFZMkMsQ0FBWiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHQgPSByZXF1aXJlO1xudmFyIGUgPSBtb2R1bGU7XG52YXIgbyA9IGV4cG9ydHM7XG52YXIgYSwgaSA9IHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMgfHwgKGEgPSBmdW5jdGlvbih0LCBlKSB7XG4gICAgcmV0dXJuIChhID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IHtcbiAgICAgICAgX19wcm90b19fOiBbXVxuICAgIH1cbiAgICBpbnN0YW5jZW9mIEFycmF5ICYmXG4gICAgZnVuY3Rpb24odCwgZSkge1xuICAgICAgICB0Ll9fcHJvdG9fXyA9IGVcbiAgICB9IHx8XG4gICAgZnVuY3Rpb24odCwgZSkge1xuICAgICAgICBmb3IgKHZhciBvIGluIGUpIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLCBvKSAmJiAodFtvXSA9IGVbb10pXG4gICAgfSkodCwgZSlcbn0sXG5mdW5jdGlvbih0LCBlKSB7XG4gICAgZnVuY3Rpb24gbygpIHtcbiAgICAgICAgdGhpcy5jb25zdHJ1Y3RvciA9IHRcbiAgICB9XG4gICAgYSh0LCBlKSxcbiAgICB0LnByb3RvdHlwZSA9IG51bGwgPT09IGUgPyBPYmplY3QuY3JlYXRlKGUpIDogKG8ucHJvdG90eXBlID0gZS5wcm90b3R5cGUsIG5ldyBvKVxufSksXG5yID0gdGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUgfHxcbmZ1bmN0aW9uKHQsIGUsIG8sIGEpIHtcbiAgICB2YXIgaSwgciA9IGFyZ3VtZW50cy5sZW5ndGgsXG4gICAgbiA9IHIgPCAzID8gZTogbnVsbCA9PT0gYSA/IGEgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIG8pIDogYTtcbiAgICBpZiAoXCJvYmplY3RcIiA9PSB0eXBlb2YgUmVmbGVjdCAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUpIG4gPSBSZWZsZWN0LmRlY29yYXRlKHQsIGUsIG8sIGEpO1xuICAgIGVsc2UgZm9yICh2YXIgcyA9IHQubGVuZ3RoIC0gMTsgcyA+PSAwOyBzLS0pKGkgPSB0W3NdKSAmJiAobiA9IChyIDwgMyA/IGkobikgOiByID4gMyA/IGkoZSwgbywgbikgOiBpKGUsIG8pKSB8fCBuKTtcbiAgICByZXR1cm4gciA+IDMgJiYgbiAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgbywgbiksXG4gICAgblxufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiAhMFxufSk7XG52YXIgbiA9IHQoXCJCYXNlVUlcIiksXG5zID0gdChcIkJhc2VCdXR0b25cIiksXG5jID0gdChcIlNka01nclwiKSxcbmwgPSB0KFwiVHdlZW5NZ3JcIiksXG51ID0gdChcIlVJTWdyXCIpLFxucCA9IHQoXCJVdGlsc1wiKSxcbmcgPSB0KFwiTWFpblwiKSxcbmQgPSB0KFwiQ29uZmlnXCIpLFxuaCA9IHQoXCJUcmFja0RhdGFFdmVudFwiKSxcbmYgPSB0KFwiRGF0YU1nclwiKSxcbm0gPSB0KFwiRXF1aXBNZ3JcIiksXG55ID0gdChcIlBsYXllck1nclwiKSxcbnYgPSB0KFwiTm9kZUVxdWlwQ29tcG9zaXRlXCIpLFxuSSA9IGNjLl9kZWNvcmF0b3IsXG5rID0gSS5jY2NsYXNzLFxuQyA9IEkucHJvcGVydHksXG5TID0gZnVuY3Rpb24odCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gbnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgcmV0dXJuIGUuQnRuQmFjayA9IG51bGwsXG4gICAgICAgIGUuQnRuQ29tcG9zaXRlID0gbnVsbCxcbiAgICAgICAgZS5Ob2RlQ29tcG9zaXRlID0gbnVsbCxcbiAgICAgICAgZS5Ob2RlQ29tcG9zaXRlRXF1aXAgPSBudWxsLFxuICAgICAgICBlLk5vZGVFcXVpcCA9IG51bGwsXG4gICAgICAgIGUuTm9kZUluZm8gPSBudWxsLFxuICAgICAgICBlLlByZWZhYkVxdWlwID0gbnVsbCxcbiAgICAgICAgZS5Ob2RlQmFnSXRlbSA9IG51bGwsXG4gICAgICAgIGUuTGFiUGFnZU51bSA9IG51bGwsXG4gICAgICAgIGUuUGFnZVZpZXdCYWcgPSBudWxsLFxuICAgICAgICBlLkNvbnRlbnRCYWcgPSBudWxsLFxuICAgICAgICBlLkluZGljYXRvciA9IG51bGwsXG4gICAgICAgIGUuTm9kZUVGZl9IQyA9IG51bGwsXG4gICAgICAgIGUuTm9kZUNvc3QgPSBudWxsLFxuICAgICAgICBlLkxhYkNvc3QgPSBudWxsLFxuICAgICAgICBlLk5vZGVWaWRlbyA9IG51bGwsXG4gICAgICAgIGUuTGF5b3V0UHJvcCA9IG51bGwsXG4gICAgICAgIGUuTGF5b3V0Tm9kZVByb3AgPSBudWxsLFxuICAgICAgICBlLkxhYk5hbWUgPSBudWxsLFxuICAgICAgICBlLmN1clBhZ2VJbmRleCA9IDAsXG4gICAgICAgIGUuY3VyQmFnSW5kZXhDb3VudCA9IDEwMCxcbiAgICAgICAgZS5ub2RlUGFnZUxpc3QgPSBbXSxcbiAgICAgICAgZS5ub2RlQmFnSXRlbUxpc3QgPSBbXSxcbiAgICAgICAgZS5ub2RlRXF1aXBJdGVtTGlzdCA9IFtdLFxuICAgICAgICBlLmRhdGFFcXVpcEl0ZW1MaXN0ID0gW10sXG4gICAgICAgIGUuaW50cm9kdWN0aW9uRXF1aXBEYXRhID0gbnVsbCxcbiAgICAgICAgZS5lcXVpcENvbXBvc2l0ZUxpc3QgPSBbXSxcbiAgICAgICAgZS5pc0xvYWRFbmQgPSAhMSxcbiAgICAgICAgZS5sb29rVmlkZW9Db3VudCA9IDAsXG4gICAgICAgIGUuY3VyQmFnTGlzdCA9IFtdLFxuICAgICAgICBlXG4gICAgfVxuICAgIHJldHVybiBpKGUsIHQpLFxuICAgIGUucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbih0KSB7XG4gICAgICAgIHRoaXMuaW50cm9kdWN0aW9uRXF1aXBEYXRhID0gdFxuICAgIH0sXG4gICAgZS5wcm90b3R5cGUub25Mb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMucmVnaXN0ZXJFdmVudCgpXG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5zdGFydCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBnLmRlZmF1bHQuaW5zdGFuY2UuZGVzdHJveVBsYXllcl9Ib21lKCksXG4gICAgICAgIHRoaXMucmVnaXN0ZXJCdG5FdmVudCgpLFxuICAgICAgICB0aGlzLmluaXREYXRhKCksXG4gICAgICAgIHRoaXMuaW5pdFZpZXcoKSxcbiAgICAgICAgdGhpcy5MYXlvdXRQcm9wLmRlc3Ryb3lBbGxDaGlsZHJlbigpLFxuICAgICAgICB0aGlzLnNjaGVkdWxlT25jZSh0aGlzLmNoYW5nZU5vZGVJbmZvKVxuICAgIH0sXG4gICAgZS5wcm90b3R5cGUucmVnaXN0ZXJFdmVudCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmFkZEV2ZW50KGQuRXZlbnROYW1lLlBsYWNlQ29tcG9zaXRlRXF1aXAsIHRoaXMucmVjb2duaXRpb25Db21wb3NpdGVMaXN0KVxuICAgIH0sXG4gICAgZS5wcm90b3R5cGUuaW5pdERhdGEgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5lcXVpcENvbXBvc2l0ZUxpc3QubGVuZ3RoID0gM1xuICAgIH0sXG4gICAgZS5wcm90b3R5cGUuaW5pdFZpZXcgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5sb2FkUGFnZU51bSgpLFxuICAgICAgICB0aGlzLmluaXRDb21wb3NpdGVWaWV3KClcbiAgICB9LFxuICAgIGUucHJvdG90eXBlLmluaXRDdXJQYWdlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuY3VyUGFnZUluZGV4ID0gdGhpcy5QYWdlVmlld0JhZy5nZXRDdXJyZW50UGFnZUluZGV4KClcbiAgICB9LFxuICAgIGUucHJvdG90eXBlLmp1bXBDdXJQYWdlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuUGFnZVZpZXdCYWcuc2V0Q3VycmVudFBhZ2VJbmRleCgwKSxcbiAgICAgICAgdGhpcy5jdXJQYWdlSW5kZXggPSB0aGlzLlBhZ2VWaWV3QmFnLmdldEN1cnJlbnRQYWdlSW5kZXgoKVxuICAgIH0sXG4gICAgZS5wcm90b3R5cGUucmVnaXN0ZXJCdG5FdmVudCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgdCA9IHRoaXM7XG4gICAgICAgIHRoaXMuQnRuQmFjay5vbihjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9FTkQsXG4gICAgICAgIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdC5sb29rVmlkZW9Db3VudCA+IDAgPyB1LlVJTWdyLmdldEluc3RhbmNlKCkub3BlblVJKGQuVUlJRC5VSUdlbmVyYWxXaW5kb3cxLCAtMSwgXCJcIiwgXCI8Y29sb3IgPSAjMDAwMDAwPuWIh+aNouijheWkh+aIlumAgOWHuueVjOmdolxcbuW9k+WJjeinhumikei/m+W6puWwhjwvYz48Y29sb3IgPSAjZmYwMDAwPuS4jeS6iOS/neWtmDwvYz7lmaLvvIFcIiwgbnVsbCxcbiAgICAgICAgICAgIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHUuVUlNZ3IuZ2V0SW5zdGFuY2UoKS5vcGVuVUkoZC5VSUlELlVJRXF1aXAsIC0xKSxcbiAgICAgICAgICAgICAgICB0LmNsb3NlVmlldygpXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbnVsbCkgOiAodS5VSU1nci5nZXRJbnN0YW5jZSgpLm9wZW5VSShkLlVJSUQuVUlFcXVpcCwgLTEpLCB0LmNsb3NlVmlldygpKVxuICAgICAgICB9KSxcbiAgICAgICAgdGhpcy5CdG5Db21wb3NpdGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELFxuICAgICAgICBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICh0LkJ0bkNvbXBvc2l0ZS5nZXRDb21wb25lbnQocy5CYXNlQnV0dG9uKS5pbnRlcmFjdGFibGUpIGlmICh0LmlzRnVsbEZvckNvbXBvc2l0ZUluZGV4KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgZSA9IHQuZXF1aXBDb21wb3NpdGVMaXN0WzBdLnN0YXJMZXZlbCA/IHQuZXF1aXBDb21wb3NpdGVMaXN0WzBdLnN0YXJMZXZlbDogMCxcbiAgICAgICAgICAgICAgICBvID0gZi5EYXRhTWdyLmdldEluc3RhbmNlKCkuZ2V0RXF1aXBTdGFyQ2ZnKHQuZXF1aXBDb21wb3NpdGVMaXN0WzBdLmlkLCBlKS5jb25zdW1lO1xuICAgICAgICAgICAgICAgIGlmICh5LlBsYXllck1nci5nZXRJbnN0YW5jZSgpLmdlVXNlckRhdGEoKS5zdWJHb2xkTnVtKG8pKSB7XG4gICAgICAgICAgICAgICAgICAgIHkuUGxheWVyTWdyLmdldEluc3RhbmNlKCkuZ2V0VHJhY2tEYXRhKCkuZ2V0Q291bnRIQygpIDwgMTAgJiYgKHkuUGxheWVyTWdyLmdldEluc3RhbmNlKCkuZ2V0VHJhY2tEYXRhKCkuYWRkQ291bnRIQygpLCB5LlBsYXllck1nci5nZXRJbnN0YW5jZSgpLmdldFRyYWNrRGF0YSgpLnlvdW1lbmdUcmFjayhoLlRyYWNrSWQucmVmaW5lX3RpbWVfWCwgeS5QbGF5ZXJNZ3IuZ2V0SW5zdGFuY2UoKS5nZXRUcmFja0RhdGEoKS5nZXRDb3VudEhDKCkpKSxcbiAgICAgICAgICAgICAgICAgICAgeS5QbGF5ZXJNZ3IuZ2V0SW5zdGFuY2UoKS5nZXRUcmFja0RhdGEoKS55b3VtZW5nVHJhY2soaC5UcmFja0lkLnJlZmluZV9lcXVpcF9YLCB0LmVxdWlwQ29tcG9zaXRlTGlzdFswXS5pZCksXG4gICAgICAgICAgICAgICAgICAgIHkuUGxheWVyTWdyLmdldEluc3RhbmNlKCkuZ2V0VHJhY2tEYXRhKCkueW91bWVuZ1RyYWNrKGguVHJhY2tJZC5yZWZpbmVfZXF1aXBfbHZfWCwgZSArIDEpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgYSwgaSA9IG0uZGVmYXVsdC5nZXRJbnN0YW5jZSgpLmdldEVxdWlwU2VsbFZhbHVlX1FIKHQuZXF1aXBDb21wb3NpdGVMaXN0WzBdLmlkLCB0LmVxdWlwQ29tcG9zaXRlTGlzdFswXS50eXBlLCB0LmVxdWlwQ29tcG9zaXRlTGlzdFswXS5JRENhcmQsIHQuZXF1aXBDb21wb3NpdGVMaXN0WzBdKSArIG0uZGVmYXVsdC5nZXRJbnN0YW5jZSgpLmdldEVxdWlwU2VsbFZhbHVlX1FIKHQuZXF1aXBDb21wb3NpdGVMaXN0WzFdLmlkLCB0LmVxdWlwQ29tcG9zaXRlTGlzdFsxXS50eXBlLCB0LmVxdWlwQ29tcG9zaXRlTGlzdFsxXS5JRENhcmQsIHQuZXF1aXBDb21wb3NpdGVMaXN0WzFdKSArIG0uZGVmYXVsdC5nZXRJbnN0YW5jZSgpLmdldEVxdWlwU2VsbFZhbHVlX1FIKHQuZXF1aXBDb21wb3NpdGVMaXN0WzJdLmlkLCB0LmVxdWlwQ29tcG9zaXRlTGlzdFsyXS50eXBlLCB0LmVxdWlwQ29tcG9zaXRlTGlzdFsyXS5JRENhcmQsIHQuZXF1aXBDb21wb3NpdGVMaXN0WzJdKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHQuZXF1aXBDb21wb3NpdGVMaXN0WzBdLmlzV2Vhcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHIgPSB5LlBsYXllck1nci5nZXRJbnN0YW5jZSgpLmdlVXNlckRhdGEoKS5nZXRFcXVpcElEQ2FyZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogdC5lcXVpcENvbXBvc2l0ZUxpc3RbMF0uaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogdC5lcXVpcENvbXBvc2l0ZUxpc3RbMF0udHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWFsaXR5OiB0LmVxdWlwQ29tcG9zaXRlTGlzdFswXS5xdWFsaXR5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cmVuZ3RoZW5MdjogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1VubG9jazogdC5lcXVpcENvbXBvc2l0ZUxpc3RbMF0uaXNVbmxvY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNXZWFyOiB0LmVxdWlwQ29tcG9zaXRlTGlzdFswXS5pc1dlYXIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkZW9Db3VudDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBJRENhcmQ6IHIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhckxldmVsOiBlICsgMVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHkuUGxheWVyTWdyLmdldEluc3RhbmNlKCkuZ2VVc2VyRGF0YSgpLnNldEVxdWlwKGEsICExKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHkuUGxheWVyTWdyLmdldEluc3RhbmNlKCkuZ2VVc2VyRGF0YSgpLmFiYW5kb25FcXVpcCh0LmVxdWlwQ29tcG9zaXRlTGlzdFsxXSksXG4gICAgICAgICAgICAgICAgICAgICAgICB5LlBsYXllck1nci5nZXRJbnN0YW5jZSgpLmdlVXNlckRhdGEoKS5hYmFuZG9uRXF1aXAodC5lcXVpcENvbXBvc2l0ZUxpc3RbMl0pXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB0LmVxdWlwQ29tcG9zaXRlTGlzdFsxXS5pc1dlYXIgPyAociA9IHkuUGxheWVyTWdyLmdldEluc3RhbmNlKCkuZ2VVc2VyRGF0YSgpLmdldEVxdWlwSURDYXJkKCksIGEgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogdC5lcXVpcENvbXBvc2l0ZUxpc3RbMV0uaWQsXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiB0LmVxdWlwQ29tcG9zaXRlTGlzdFsxXS50eXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgcXVhbGl0eTogdC5lcXVpcENvbXBvc2l0ZUxpc3RbMV0ucXVhbGl0eSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0cmVuZ3RoZW5MdjogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzVW5sb2NrOiB0LmVxdWlwQ29tcG9zaXRlTGlzdFsxXS5pc1VubG9jayxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzV2VhcjogITEsXG4gICAgICAgICAgICAgICAgICAgICAgICB2aWRlb0NvdW50OiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgSURDYXJkOiByLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhckxldmVsOiBlICsgMVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB5LlBsYXllck1nci5nZXRJbnN0YW5jZSgpLmdlVXNlckRhdGEoKS5zZXRFcXVpcChhLCAhMSksIHkuUGxheWVyTWdyLmdldEluc3RhbmNlKCkuZ2VVc2VyRGF0YSgpLmFiYW5kb25FcXVpcCh0LmVxdWlwQ29tcG9zaXRlTGlzdFswXSksIHkuUGxheWVyTWdyLmdldEluc3RhbmNlKCkuZ2VVc2VyRGF0YSgpLmFiYW5kb25FcXVpcCh0LmVxdWlwQ29tcG9zaXRlTGlzdFsyXSkpIDogdC5lcXVpcENvbXBvc2l0ZUxpc3RbMl0uaXNXZWFyID8gKHIgPSB5LlBsYXllck1nci5nZXRJbnN0YW5jZSgpLmdlVXNlckRhdGEoKS5nZXRFcXVpcElEQ2FyZCgpLCBhID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IHQuZXF1aXBDb21wb3NpdGVMaXN0WzJdLmlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogdC5lcXVpcENvbXBvc2l0ZUxpc3RbMl0udHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHF1YWxpdHk6IHQuZXF1aXBDb21wb3NpdGVMaXN0WzJdLnF1YWxpdHksXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJlbmd0aGVuTHY6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1VubG9jazogdC5lcXVpcENvbXBvc2l0ZUxpc3RbMl0uaXNVbmxvY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1dlYXI6ICExLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmlkZW9Db3VudDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIElEQ2FyZDogcixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJMZXZlbDogZSArIDFcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgeS5QbGF5ZXJNZ3IuZ2V0SW5zdGFuY2UoKS5nZVVzZXJEYXRhKCkuc2V0RXF1aXAoYSwgITEpLCB5LlBsYXllck1nci5nZXRJbnN0YW5jZSgpLmdlVXNlckRhdGEoKS51bmxvYWRFcXVpcCh0LmVxdWlwQ29tcG9zaXRlTGlzdFsyXSksIHkuUGxheWVyTWdyLmdldEluc3RhbmNlKCkuZ2VVc2VyRGF0YSgpLmFiYW5kb25FcXVpcCh0LmVxdWlwQ29tcG9zaXRlTGlzdFswXSksIHkuUGxheWVyTWdyLmdldEluc3RhbmNlKCkuZ2VVc2VyRGF0YSgpLmFiYW5kb25FcXVpcCh0LmVxdWlwQ29tcG9zaXRlTGlzdFsxXSkpIDogdC5lcXVpcENvbXBvc2l0ZUxpc3RbMF0uaXNXZWFyIHx8IHQuZXF1aXBDb21wb3NpdGVMaXN0WzFdLmlzV2VhciB8fCB0LmVxdWlwQ29tcG9zaXRlTGlzdFsyXS5pc1dlYXIgfHwgKHIgPSB5LlBsYXllck1nci5nZXRJbnN0YW5jZSgpLmdlVXNlckRhdGEoKS5nZXRFcXVpcElEQ2FyZCgpLCBhID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IHQuZXF1aXBDb21wb3NpdGVMaXN0WzBdLmlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogdC5lcXVpcENvbXBvc2l0ZUxpc3RbMF0udHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHF1YWxpdHk6IHQuZXF1aXBDb21wb3NpdGVMaXN0WzBdLnF1YWxpdHksXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJlbmd0aGVuTHY6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1VubG9jazogdC5lcXVpcENvbXBvc2l0ZUxpc3RbMF0uaXNVbmxvY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1dlYXI6IHQuZXF1aXBDb21wb3NpdGVMaXN0WzBdLmlzV2VhcixcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpZGVvQ291bnQ6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBJRENhcmQ6IHIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFyTGV2ZWw6IGUgKyAxXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHkuUGxheWVyTWdyLmdldEluc3RhbmNlKCkuZ2VVc2VyRGF0YSgpLmFkZEVxdWlwKGEpLCB5LlBsYXllck1nci5nZXRJbnN0YW5jZSgpLmdlVXNlckRhdGEoKS5hYmFuZG9uRXF1aXAodC5lcXVpcENvbXBvc2l0ZUxpc3RbMF0pLCB5LlBsYXllck1nci5nZXRJbnN0YW5jZSgpLmdlVXNlckRhdGEoKS5hYmFuZG9uRXF1aXAodC5lcXVpcENvbXBvc2l0ZUxpc3RbMV0pLCB5LlBsYXllck1nci5nZXRJbnN0YW5jZSgpLmdlVXNlckRhdGEoKS5hYmFuZG9uRXF1aXAodC5lcXVpcENvbXBvc2l0ZUxpc3RbMl0pLCB0LmFkZEJhZ0l0ZW1Gb3JJbmRleChhKSk7XG4gICAgICAgICAgICAgICAgICAgIHQucGxheUhDRWZmKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdS5VSU1nci5nZXRJbnN0YW5jZSgpLm9wZW5VSShkLlVJSUQuVUlDb21wb3NpdGVFbmQsIC0xLCBhLFxuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaSA+IDAgJiYgKHkuUGxheWVyTWdyLmdldEluc3RhbmNlKCkuZ2VVc2VyRGF0YSgpLmFkZEdvbGROdW0oaSksIHUuVUlNZ3IuZ2V0SW5zdGFuY2UoKS5vcGVuVUkoZC5VSUlELlVJVGlwcywgLTEsIFwi5ZCI5oiQ5oiQ5Yqf77yM6L+U5Zue5by65YyW5raI6ICXIOmHkeW4gXhcIiArIGkpKVxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIHQuY2xlYXJDb21wb3NpdGVJbmRleCgpLFxuICAgICAgICAgICAgICAgICAgICB0LmNsZWFyQ29tcG9zaXRlRGF0YSgpLFxuICAgICAgICAgICAgICAgICAgICB0LmludHJvZHVjdGlvbkVxdWlwRGF0YSA9IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHQuaGlkZU5vZGVJbmZvKCksXG4gICAgICAgICAgICAgICAgICAgIHQuZmlsdHJhdGVFcXVpcChudWxsKSxcbiAgICAgICAgICAgICAgICAgICAgdC5sb2FkQmFnUGFnZSh0LmN1ckJhZ0xpc3QpLFxuICAgICAgICAgICAgICAgICAgICB0LnJlZnJlc2hCdG5TdGF0ZSghMSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgdS5VSU1nci5nZXRJbnN0YW5jZSgpLm9wZW5VSShkLlVJSUQuVUlUaXBzLCAtMSwgXCLor7fmt7vliqDlkIjmiJDoo4XlpIdcIilcbiAgICAgICAgfSk7XG4gICAgICAgIGZvciAodmFyIGUgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICB2YXIgYSA9IG8uTm9kZUNvbXBvc2l0ZS5nZXRDaGlsZEJ5TmFtZShcIk5vZGVDb21wb3NpdGVFcXVpcFwiICsgZSk7XG4gICAgICAgICAgICBjYy5pc1ZhbGlkKGEpICYmIGEub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELFxuICAgICAgICAgICAgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgaWYgKDAgPT0gZSkge1xuICAgICAgICAgICAgICAgICAgICB0LmludHJvZHVjdGlvbkVxdWlwRGF0YSA9IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHQuaGlkZU5vZGVJbmZvKCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBvID0gdC5Ob2RlQ29tcG9zaXRlLmdldENoaWxkQnlOYW1lKFwiTm9kZUNvbXBvc2l0ZUVxdWlwMFwiKSxcbiAgICAgICAgICAgICAgICAgICAgaSA9IHQuTm9kZUNvbXBvc2l0ZS5nZXRDaGlsZEJ5TmFtZShcIk5vZGVDb21wb3NpdGVFcXVpcDFcIiksXG4gICAgICAgICAgICAgICAgICAgIHIgPSB0Lk5vZGVDb21wb3NpdGUuZ2V0Q2hpbGRCeU5hbWUoXCJOb2RlQ29tcG9zaXRlRXF1aXAyXCIpLFxuICAgICAgICAgICAgICAgICAgICBuID0gdC5lcXVpcENvbXBvc2l0ZUxpc3RbMF07XG4gICAgICAgICAgICAgICAgICAgIHQuZXF1aXBDb21wb3NpdGVMaXN0WzBdID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHMgPSB0LmVxdWlwQ29tcG9zaXRlTGlzdFsxXTtcbiAgICAgICAgICAgICAgICAgICAgdC5lcXVpcENvbXBvc2l0ZUxpc3RbMV0gPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICB2YXIgYyA9IHQuZXF1aXBDb21wb3NpdGVMaXN0WzJdO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdC5lcXVpcENvbXBvc2l0ZUxpc3RbMl0gPSBudWxsLFxuICAgICAgICAgICAgICAgICAgICB0LnJlZnJlc2hCdG5TdGF0ZSghMSksXG4gICAgICAgICAgICAgICAgICAgIGNjLmlzVmFsaWQoby5nZXRDaGlsZEJ5TmFtZShcIk5vZGVFcXVpcFwiKSkgJiYgby5nZXRDaGlsZEJ5TmFtZShcIk5vZGVFcXVpcFwiKS5kZXN0cm95KCksXG4gICAgICAgICAgICAgICAgICAgIGNjLmlzVmFsaWQoaS5nZXRDaGlsZEJ5TmFtZShcIk5vZGVFcXVpcFwiKSkgJiYgaS5nZXRDaGlsZEJ5TmFtZShcIk5vZGVFcXVpcFwiKS5kZXN0cm95KCksXG4gICAgICAgICAgICAgICAgICAgIGNjLmlzVmFsaWQoci5nZXRDaGlsZEJ5TmFtZShcIk5vZGVFcXVpcFwiKSkgJiYgci5nZXRDaGlsZEJ5TmFtZShcIk5vZGVFcXVpcFwiKS5kZXN0cm95KCksXG4gICAgICAgICAgICAgICAgICAgIHZvaWQodC5pc051bGxGb3JDb21wb3NpdGVJbmRleCgpID8gKHQucmVmcmVzaFZpZGVvU3RhdGUoITEpLCBjYy5pc1ZhbGlkKHQuTm9kZUNvbXBvc2l0ZUVxdWlwLmdldENoaWxkQnlOYW1lKFwiTm9kZUVxdWlwXCIpKSAmJiB0Lk5vZGVDb21wb3NpdGVFcXVpcC5nZXRDaGlsZEJ5TmFtZShcIk5vZGVFcXVpcFwiKS5kZXN0cm95KCksIHQuZmlsdHJhdGVFcXVpcChudWxsKSwgdC5sb2FkQmFnUGFnZSh0LmN1ckJhZ0xpc3QpKSA6ICh0LnJlZnJlc2hWaWRlb1N0YXRlKCEwKSwgdC5hZGRCYWdJdGVtRm9ySW5kZXgobiksIHQuYWRkQmFnSXRlbUZvckluZGV4KHMpLCB0LmFkZEJhZ0l0ZW1Gb3JJbmRleChjKSkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0LmVxdWlwQ29tcG9zaXRlTGlzdFtlXSkgaWYgKHQubG9va1ZpZGVvQ291bnQgPiAwKSB1LlVJTWdyLmdldEluc3RhbmNlKCkub3BlblVJKGQuVUlJRC5VSUdlbmVyYWxXaW5kb3cxLCAtMSwgXCJcIiwgXCI8Y29sb3IgPSAjMDAwMDAwPuWIh+aNouijheWkh+aIlumAgOWHuueVjOmdolxcbuW9k+WJjeinhumikei/m+W6puWwhjwvYz48Y29sb3IgPSAjZmYwMDAwPuS4jeS6iOS/neWtmDwvYz7lmaLvvIFcIiwgbnVsbCxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG8gPSB0LmVxdWlwQ29tcG9zaXRlTGlzdFtlXTtcbiAgICAgICAgICAgICAgICAgICAgdC5lcXVpcENvbXBvc2l0ZUxpc3RbZV0gPSBudWxsLFxuICAgICAgICAgICAgICAgICAgICBjYy5pc1ZhbGlkKGEuZ2V0Q2hpbGRCeU5hbWUoXCJOb2RlRXF1aXBcIikpICYmIGEuZ2V0Q2hpbGRCeU5hbWUoXCJOb2RlRXF1aXBcIikuZGVzdHJveSgpLFxuICAgICAgICAgICAgICAgICAgICB0LnJlZnJlc2hCdG5TdGF0ZSghMSksXG4gICAgICAgICAgICAgICAgICAgIHQuaXNOdWxsRm9yQ29tcG9zaXRlSW5kZXgoKSA/ICh0LnJlZnJlc2hWaWRlb1N0YXRlKCExKSwgY2MuaXNWYWxpZCh0Lk5vZGVDb21wb3NpdGVFcXVpcC5nZXRDaGlsZEJ5TmFtZShcIk5vZGVFcXVpcFwiKSkgJiYgdC5Ob2RlQ29tcG9zaXRlRXF1aXAuZ2V0Q2hpbGRCeU5hbWUoXCJOb2RlRXF1aXBcIikuZGVzdHJveSgpLCB0LmZpbHRyYXRlRXF1aXAobnVsbCksIHQubG9hZEJhZ1BhZ2UodC5jdXJCYWdMaXN0KSkgOiAodC5yZWZyZXNoVmlkZW9TdGF0ZSghMCksIHQuYWRkQmFnSXRlbUZvckluZGV4KG8pKVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbnVsbCk7XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBsID0gdC5lcXVpcENvbXBvc2l0ZUxpc3RbZV07XG4gICAgICAgICAgICAgICAgICAgIHQuZXF1aXBDb21wb3NpdGVMaXN0W2VdID0gbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgY2MuaXNWYWxpZChhLmdldENoaWxkQnlOYW1lKFwiTm9kZUVxdWlwXCIpKSAmJiBhLmdldENoaWxkQnlOYW1lKFwiTm9kZUVxdWlwXCIpLmRlc3Ryb3koKSxcbiAgICAgICAgICAgICAgICAgICAgdC5yZWZyZXNoQnRuU3RhdGUoITEpLFxuICAgICAgICAgICAgICAgICAgICB0LmlzTnVsbEZvckNvbXBvc2l0ZUluZGV4KCkgPyAodC5yZWZyZXNoVmlkZW9TdGF0ZSghMSksIGNjLmlzVmFsaWQodC5Ob2RlQ29tcG9zaXRlRXF1aXAuZ2V0Q2hpbGRCeU5hbWUoXCJOb2RlRXF1aXBcIikpICYmIHQuTm9kZUNvbXBvc2l0ZUVxdWlwLmdldENoaWxkQnlOYW1lKFwiTm9kZUVxdWlwXCIpLmRlc3Ryb3koKSwgdC5maWx0cmF0ZUVxdWlwKG51bGwpLCB0LmxvYWRCYWdQYWdlKHQuY3VyQmFnTGlzdCkpIDogKHQucmVmcmVzaFZpZGVvU3RhdGUoITApLCB0LmFkZEJhZ0l0ZW1Gb3JJbmRleChsKSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9LFxuICAgICAgICBvID0gdGhpcywgYSA9IDA7IGEgPCAzOyBhKyspIGUoYSk7XG4gICAgICAgIHRoaXMuTm9kZVZpZGVvLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX0VORCxcbiAgICAgICAgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBjLlNka01nci5nZXRJbnN0YW5jZSgpLnBsYXlWaWRlbygxLFxuICAgICAgICAgICAgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgaWYgKHkuUGxheWVyTWdyLmdldEluc3RhbmNlKCkuZ2V0VHJhY2tEYXRhKCkueW91bWVuZ1RyYWNrKGguVHJhY2tJZC5yZWZpbmVfZ2V0ZXF1aXApLCB0Lmxvb2tWaWRlb0NvdW50ICs9IDEsIHQucmVmcmVzaFZpZGVvU3RhdGUoITApLCB0Lmxvb2tWaWRlb0NvdW50ID49IHQuZ2V0TmVlZFZpZGVvQ291bnQoKSkge1xuICAgICAgICAgICAgICAgICAgICB0Lk5vZGVWaWRlby5hY3RpdmUgPSAhMTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgZSA9IHZvaWQgMCxcbiAgICAgICAgICAgICAgICAgICAgbyA9IDA7IG8gPCB0LmVxdWlwQ29tcG9zaXRlTGlzdC5sZW5ndGg7IG8rKykgaWYgKHQuZXF1aXBDb21wb3NpdGVMaXN0W29dKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiB0LmVxdWlwQ29tcG9zaXRlTGlzdFtvXS5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiB0LmVxdWlwQ29tcG9zaXRlTGlzdFtvXS50eXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1YWxpdHk6IHQuZXF1aXBDb21wb3NpdGVMaXN0W29dLnF1YWxpdHksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyZW5ndGhlbkx2OiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzVW5sb2NrOiAhMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1dlYXI6ICExLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZGVvQ291bnQ6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgSURDYXJkOiB5LlBsYXllck1nci5nZXRJbnN0YW5jZSgpLmdlVXNlckRhdGEoKS5nZXRFcXVpcElEQ2FyZCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJMZXZlbDogdC5lcXVpcENvbXBvc2l0ZUxpc3Rbb10uc3RhckxldmVsXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlID8gKHkuUGxheWVyTWdyLmdldEluc3RhbmNlKCkuZ2V0VHJhY2tEYXRhKCkueW91bWVuZ1RyYWNrKGguVHJhY2tJZC5yZWZpbmVfZXF1aXBfZ2V0X1gsIGUuaWQpLCB0Lmxvb2tWaWRlb0NvdW50ID0gMCwgeS5QbGF5ZXJNZ3IuZ2V0SW5zdGFuY2UoKS5nZVVzZXJEYXRhKCkuYWRkRXF1aXAoZSksIHQuYWRkVG9Db21wb3NpdGVJbmRleChlKSwgdC5yZWZyZXNoQnRuU3RhdGUoITApKSA6IHQubG9va1ZpZGVvQ291bnQgLT0gMVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5sb2FkUGFnZU51bSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAodGhpcy5ub2RlUGFnZUxpc3QgfHwgKHRoaXMubm9kZVBhZ2VMaXN0ID0gW10pLCB0aGlzLm5vZGVQYWdlTGlzdC5sZW5ndGggPiAwKSBmb3IgKHZhciB0ID0gMDsgdCA8IHRoaXMubm9kZVBhZ2VMaXN0Lmxlbmd0aDsgdCsrKSBjYy5pc1ZhbGlkKHRoaXMubm9kZVBhZ2VMaXN0W3RdKSAmJiAodGhpcy5jdXJQYWdlSW5kZXggPT0gdCA/IHRoaXMubm9kZVBhZ2VMaXN0W3RdLmNvbG9yID0gY2MuY29sb3IoMTkxLCAxMDgsIDApIDogdGhpcy5ub2RlUGFnZUxpc3RbdF0uY29sb3IgPSBjYy5jb2xvcigyNTUsIDI1NSwgMjU1KSk7XG4gICAgICAgIGVsc2UgZm9yICh0ID0gMDsgdCA8IHRoaXMuSW5kaWNhdG9yLmNoaWxkcmVuQ291bnQ7IHQrKykgaWYgKGNjLmlzVmFsaWQodGhpcy5JbmRpY2F0b3IuY2hpbGRyZW5bdF0pKSB7XG4gICAgICAgICAgICB2YXIgZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMuTGFiUGFnZU51bSk7XG4gICAgICAgICAgICBlLnBhcmVudCA9IHRoaXMuSW5kaWNhdG9yLmNoaWxkcmVuW3RdLFxuICAgICAgICAgICAgZS5wb3NpdGlvbiA9IGNjLlZlYzMuWkVSTyxcbiAgICAgICAgICAgIGUuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKS5zdHJpbmcgPSBcIlwiICsgKHQgKyAxKSxcbiAgICAgICAgICAgIHRoaXMuY3VyUGFnZUluZGV4ID09IHQgJiYgKGUuY29sb3IgPSBjYy5jb2xvcigxOTEsIDEwOCwgMCkpLFxuICAgICAgICAgICAgdGhpcy5ub2RlUGFnZUxpc3QucHVzaChlKVxuICAgICAgICB9XG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5yZWZyZXNoQnRuU3RhdGUgPSBmdW5jdGlvbih0KSB7XG4gICAgICAgIHRoaXMuTm9kZUNvc3QuYWN0aXZlID0gdCxcbiAgICAgICAgdGhpcy5CdG5Db21wb3NpdGUuZ2V0Q29tcG9uZW50KHMuQmFzZUJ1dHRvbikuaW50ZXJhY3RhYmxlID0gdCxcbiAgICAgICAgdCAmJiB0aGlzLnJlZnJlc2hIQ0Nvc3QoKVxuICAgIH0sXG4gICAgZS5wcm90b3R5cGUucmVmcmVzaEhDQ29zdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBmb3IgKHZhciB0LCBlID0gMDsgZSA8IHRoaXMuZXF1aXBDb21wb3NpdGVMaXN0Lmxlbmd0aDsgZSsrKSBpZiAodGhpcy5lcXVpcENvbXBvc2l0ZUxpc3RbZV0pIHtcbiAgICAgICAgICAgIHQgPSB0aGlzLmVxdWlwQ29tcG9zaXRlTGlzdFtlXTtcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5MYWJDb3N0LnN0cmluZyA9IHQgPyBmLkRhdGFNZ3IuZ2V0SW5zdGFuY2UoKS5nZXRFcXVpcFN0YXJDZmcodC5pZCwgdC5zdGFyTGV2ZWwpLmNvbnN1bWUudG9TdHJpbmcoKSA6IFwiMFwiXG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5yZWZyZXNoVmlkZW9TdGF0ZSA9IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgaWYgKHRoaXMuTm9kZVZpZGVvLmFjdGl2ZSA9IHQsIHQpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGUgPSAxLFxuICAgICAgICAgICAgbyA9IDA7IG8gPCB0aGlzLmVxdWlwQ29tcG9zaXRlTGlzdC5sZW5ndGg7IG8rKykgaWYgKCF0aGlzLmVxdWlwQ29tcG9zaXRlTGlzdFtvXSkge1xuICAgICAgICAgICAgICAgIGUgPSBvO1xuICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgYSA9IHRoaXMuTm9kZUNvbXBvc2l0ZS5nZXRDaGlsZEJ5TmFtZShcIk5vZGVDb21wb3NpdGVFcXVpcFwiICsgZSksXG4gICAgICAgICAgICBpID0gcC5VdGlscy5wb3NUcmFuc2Zvcm0oYS5wYXJlbnQsIGEuZ2V0UG9zaXRpb24oKSwgdGhpcy5Ob2RlVmlkZW8ucGFyZW50KTtcbiAgICAgICAgICAgIHRoaXMuTm9kZVZpZGVvLnNldFBvc2l0aW9uKGkpLFxuICAgICAgICAgICAgdGhpcy5yZWZyZXNoTG9va1ZpZGVvQ291bnQoKVxuICAgICAgICB9IGVsc2UgdGhpcy5sb29rVmlkZW9Db3VudCA9IDBcbiAgICB9LFxuICAgIGUucHJvdG90eXBlLmdldE5lZWRWaWRlb0NvdW50ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGZvciAodmFyIHQsIGUgPSAwOyBlIDwgdGhpcy5lcXVpcENvbXBvc2l0ZUxpc3QubGVuZ3RoOyBlKyspIGlmICh0aGlzLmVxdWlwQ29tcG9zaXRlTGlzdFtlXSkge1xuICAgICAgICAgICAgdCA9IHRoaXMuZXF1aXBDb21wb3NpdGVMaXN0W2VdO1xuICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZi5EYXRhTWdyLmdldEluc3RhbmNlKCkuZ2V0RXF1aXBTdGFyQ2ZnKHQuaWQsIHQuc3RhckxldmVsKS5BZHZlcnRpc2VtZW50TnVtXG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5yZWZyZXNoTG9va1ZpZGVvQ291bnQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHQgPSB0aGlzLmdldE5lZWRWaWRlb0NvdW50KCk7XG4gICAgICAgIHQgfHwgKHRoaXMuTm9kZVZpZGVvLmFjdGl2ZSA9ICExKSxcbiAgICAgICAgdGhpcy5Ob2RlVmlkZW8uZ2V0Q2hpbGRCeU5hbWUoXCJMYWJWaWRlb1wiKS5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IHRoaXMubG9va1ZpZGVvQ291bnQgKyBcIi9cIiArIHRcbiAgICB9LFxuICAgIGUucHJvdG90eXBlLnJlY29nbml0aW9uQ29tcG9zaXRlTGlzdCA9IGZ1bmN0aW9uKHQsIGUpIHtcbiAgICAgICAgdmFyIG8gPSB0aGlzO1xuICAgICAgICBpZiAodGhpcy5pc0xvYWRFbmQpIGlmICh0aGlzLmxvb2tWaWRlb0NvdW50ID4gMCkgdS5VSU1nci5nZXRJbnN0YW5jZSgpLm9wZW5VSShkLlVJSUQuVUlHZW5lcmFsV2luZG93MSwgLTEsIFwiXCIsIFwiPGNvbG9yID0gIzAwMDAwMD7liIfmjaLoo4XlpIfmiJbpgIDlh7rnlYzpnaJcXG7lvZPliY3op4bpopHov5vluqblsIY8L2M+PGNvbG9yID0gI2ZmMDAwMD7kuI3kuojkv53lrZg8L2M+5Zmi77yBXCIsIG51bGwsXG4gICAgICAgIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgby5pc0Z1bGxGb3JDb21wb3NpdGVJbmRleCgpID8gdS5VSU1nci5nZXRJbnN0YW5jZSgpLm9wZW5VSShkLlVJSUQuVUlUaXBzLCAtMSwgXCLlkIjmiJDmoI/lt7Lmu6FcIikgOiAoby5kZXN0cm95QmFnSXRlbWZvckluZGV4KHQpLCBvLmlzTnVsbEZvckNvbXBvc2l0ZUluZGV4KCkgJiYgKG8uanVtcEN1clBhZ2UoKSwgby5maWx0cmF0ZUVxdWlwKGUpLCBvLmxvYWRCYWdQYWdlKG8uY3VyQmFnTGlzdCkpLCBvLmFkZFRvQ29tcG9zaXRlSW5kZXgoZSkpXG4gICAgICAgIH0sXG4gICAgICAgIG51bGwpO1xuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmlzRnVsbEZvckNvbXBvc2l0ZUluZGV4KCkpIHJldHVybiB2b2lkIHUuVUlNZ3IuZ2V0SW5zdGFuY2UoKS5vcGVuVUkoZC5VSUlELlVJVGlwcywgLTEsIFwi5ZCI5oiQ5qCP5bey5ruhXCIpO1xuICAgICAgICAgICAgdGhpcy5kZXN0cm95QmFnSXRlbWZvckluZGV4KHQpLFxuICAgICAgICAgICAgdGhpcy5pc051bGxGb3JDb21wb3NpdGVJbmRleCgpICYmICh0aGlzLmp1bXBDdXJQYWdlKCksIHRoaXMuZmlsdHJhdGVFcXVpcChlKSwgdGhpcy5sb2FkQmFnUGFnZSh0aGlzLmN1ckJhZ0xpc3QpKSxcbiAgICAgICAgICAgIHRoaXMuYWRkVG9Db21wb3NpdGVJbmRleChlKVxuICAgICAgICB9XG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5pbml0Q29tcG9zaXRlVmlldyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmFkZFRvQ29tcG9zaXRlSW5kZXgodGhpcy5pbnRyb2R1Y3Rpb25FcXVpcERhdGEpLFxuICAgICAgICB0aGlzLmZpbHRyYXRlRXF1aXAodGhpcy5pbnRyb2R1Y3Rpb25FcXVpcERhdGEpLFxuICAgICAgICB0aGlzLmxvYWRCYWdQYWdlKHRoaXMuY3VyQmFnTGlzdClcbiAgICB9LFxuICAgIGUucHJvdG90eXBlLmxvYWRCYWdQYWdlID0gZnVuY3Rpb24odCkge1xuICAgICAgICB0aGlzLmNsZWFyRXF1aXBBbmREYXRhKCk7XG4gICAgICAgIGZvciAodmFyIGUgPSB0LFxuICAgICAgICBvID0gMDsgbyA8IDg7IG8rKykge1xuICAgICAgICAgICAgdmFyIGEgPSB0aGlzLkNvbnRlbnRCYWcuY2hpbGRyZW5bb107XG4gICAgICAgICAgICB0aGlzLmxvYWRCYWdJdGVtKGEsICExLCBvLCBlKVxuICAgICAgICB9XG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5sb2FkQmFnSXRlbSA9IGZ1bmN0aW9uKHQsIGUsIG8sIGEpIHtcbiAgICAgICAgdmFyIGkgPSB0aGlzOyAoIWEgfHwgYS5sZW5ndGggPD0gMCkgJiYgKHRoaXMuaXNMb2FkRW5kID0gITApO1xuICAgICAgICBmb3IgKHZhciByID0gZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgbi5zY2hlZHVsZU9uY2UoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIHIgPSBlICsgMTggKiBvLFxuICAgICAgICAgICAgICAgIG4gPSBudWxsO1xuICAgICAgICAgICAgICAgIGNjLmlzVmFsaWQoaS5ub2RlQmFnSXRlbUxpc3Rbcl0pID8gbiA9IGkubm9kZUJhZ0l0ZW1MaXN0W3JdIDogKChuID0gY2MuaW5zdGFudGlhdGUoaS5Ob2RlQmFnSXRlbSkpLnBhcmVudCA9IHQsIG4ucG9zaXRpb24gPSBjYy5WZWMzLlpFUk8sIGkubm9kZUJhZ0l0ZW1MaXN0LnB1c2gobikpLFxuICAgICAgICAgICAgICAgIGEubGVuZ3RoID4gciAmJiAoaS5sb2FkRXF1aXBUb0JhZyhyLCBuLCBhW3JdKSwgciA9PSBpLmN1ckJhZ0xpc3QubGVuZ3RoIC0gMSAmJiAoaS5pc0xvYWRFbmQgPSAhMCkpXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLjAxICogKGUgKyAxOCAqIG8pKVxuICAgICAgICB9LFxuICAgICAgICBuID0gdGhpcywgcyA9IDA7IHMgPCAxODsgcysrKSByKHMpXG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5sb2FkRXF1aXBUb0JhZyA9IGZ1bmN0aW9uKHQsIGUsIG8pIHtcbiAgICAgICAgdmFyIGEgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLlByZWZhYkVxdWlwKTtcbiAgICAgICAgYS5wYXJlbnQgPSBlLFxuICAgICAgICBtLmRlZmF1bHQuZ2V0SW5zdGFuY2UoKS5wbGF5RWZmRm9yUXVhbGl0eShhLCBvLnF1YWxpdHkpLFxuICAgICAgICBhLmdldENvbXBvbmVudCh2LmRlZmF1bHQpLmluaXREYXRhKHQsIG8sIGQuVUlJRC5VSUVxdWlwKTtcbiAgICAgICAgdmFyIGkgPSBmLkRhdGFNZ3IuZ2V0SW5zdGFuY2UoKS5nZXRFcXVpcENmZyhvLmlkKTtcbiAgICAgICAgdGhpcy5sb2FkU3ByaXRlRnJhbWUoaS5idW5kbGVRdWFsaXR5LCBpLmljb25RdWFsaXR5LFxuICAgICAgICBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgICBhLmdldENvbXBvbmVudChjYy5TcHJpdGUpLnNwcml0ZUZyYW1lID0gdFxuICAgICAgICB9KSxcbiAgICAgICAgdGhpcy5sb2FkU3ByaXRlRnJhbWUoaS5idW5kbGUsIGkuZXF1aXBJY29uLFxuICAgICAgICBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgICBhLmdldENoaWxkQnlOYW1lKFwiU3BJY29uXCIpLmdldENvbXBvbmVudChjYy5TcHJpdGUpLnNwcml0ZUZyYW1lID0gdFxuICAgICAgICB9KSxcbiAgICAgICAgby5zdHJlbmd0aGVuTHYgPiAwID8gKGEuZ2V0Q2hpbGRCeU5hbWUoXCJMYWJTdHJlbmd0aGVuTHZcIikuYWN0aXZlID0gITAsIGEuZ2V0Q2hpbGRCeU5hbWUoXCJMYWJTdHJlbmd0aGVuTHZcIikuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKS5zdHJpbmcgPSBcIitcIiArIG8uc3RyZW5ndGhlbkx2KSA6IGEuZ2V0Q2hpbGRCeU5hbWUoXCJMYWJTdHJlbmd0aGVuTHZcIikuYWN0aXZlID0gITE7XG4gICAgICAgIHZhciByID0gby5zdGFyTGV2ZWwgPyBvLnN0YXJMZXZlbDogMDtcbiAgICAgICAgaWYgKHIgPiAwKSB7XG4gICAgICAgICAgICB2YXIgbiA9IGEuZ2V0Q2hpbGRCeU5hbWUoXCJOb2RlU3RhclwiKTtcbiAgICAgICAgICAgIG4uYWN0aXZlID0gITA7XG4gICAgICAgICAgICBmb3IgKHZhciBzID0gMDsgcyA8IG4uY2hpbGRyZW5Db3VudDsgcysrKSByID4gcyA/IGNjLmlzVmFsaWQobi5jaGlsZHJlbltzXSkgJiYgKG4uY2hpbGRyZW5bc10uZ2V0Q2hpbGRCeU5hbWUoXCJTcFN0YXJcIikuYWN0aXZlID0gITApIDogY2MuaXNWYWxpZChuLmNoaWxkcmVuW3NdKSAmJiAobi5jaGlsZHJlbltzXS5nZXRDaGlsZEJ5TmFtZShcIlNwU3RhclwiKS5hY3RpdmUgPSAhMSlcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmlzTnVsbEZvckNvbXBvc2l0ZUluZGV4KCkgfHwgdGhpcy5nZXRDb21wb3NpdGVFcXVpcFF1YWxpdHlOdW0obykgJiYgdGhpcy5nZXRDb21wb3NpdGVFcXVpcFN0YXJOdW0yKG8pIHx8IChhLmdldENoaWxkQnlOYW1lKFwiU3BNYXNrXCIpLmFjdGl2ZSA9ICEwKSxcbiAgICAgICAgdGhpcy5ub2RlRXF1aXBJdGVtTGlzdC5sZW5ndGggPiB0ID8gKHRoaXMubm9kZUVxdWlwSXRlbUxpc3RbdF0gPSBhLCB0aGlzLmRhdGFFcXVpcEl0ZW1MaXN0W3RdID0gbykgOiAodGhpcy5ub2RlRXF1aXBJdGVtTGlzdC5wdXNoKGEpLCB0aGlzLmRhdGFFcXVpcEl0ZW1MaXN0LnB1c2gobykpXG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5kZXN0cm95QmFnSXRlbWZvckluZGV4ID0gZnVuY3Rpb24odCkge1xuICAgICAgICBpZiAodGhpcy5ub2RlQmFnSXRlbUxpc3QgJiYgISh0ID49IHRoaXMubm9kZUJhZ0l0ZW1MaXN0Lmxlbmd0aCB8fCB0IDwgMCkpIHtcbiAgICAgICAgICAgIHZhciBlID0gdGhpcy5ub2RlQmFnSXRlbUxpc3RbdF0uY2hpbGRyZW5bMF07XG4gICAgICAgICAgICBjYy5pc1ZhbGlkKGUpICYmIChlLmRlc3Ryb3koKSwgdCA8IHRoaXMubm9kZUVxdWlwSXRlbUxpc3QubGVuZ3RoICYmICh0aGlzLm5vZGVFcXVpcEl0ZW1MaXN0W3RdID0gbnVsbCwgdGhpcy5kYXRhRXF1aXBJdGVtTGlzdFt0XSA9IG51bGwpKVxuICAgICAgICB9XG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5hZGRCYWdJdGVtRm9ySW5kZXggPSBmdW5jdGlvbih0LCBlKSB7XG4gICAgICAgIGlmICh2b2lkIDAgPT09IGUgJiYgKGUgPSBudWxsKSwgdGhpcy5ub2RlQmFnSXRlbUxpc3QgJiYgdCkge1xuICAgICAgICAgICAgdmFyIG8gPSBlO1xuICAgICAgICAgICAgaWYgKG51bGwgPT0gbykge1xuICAgICAgICAgICAgICAgIG8gPSB0aGlzLm5vZGVFcXVpcEl0ZW1MaXN0Lmxlbmd0aDtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBhID0gMDsgYSA8IHRoaXMubm9kZUVxdWlwSXRlbUxpc3QubGVuZ3RoOyBhKyspIGlmICghdGhpcy5ub2RlRXF1aXBJdGVtTGlzdFthXSkge1xuICAgICAgICAgICAgICAgICAgICBvID0gYTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgaSA9IHRoaXMubm9kZUJhZ0l0ZW1MaXN0W29dO1xuICAgICAgICAgICAgY2MuaXNWYWxpZChpKSAmJiB0aGlzLmxvYWRFcXVpcFRvQmFnKG8sIGksIHQpXG4gICAgICAgIH1cbiAgICB9LFxuICAgIGUucHJvdG90eXBlLmFkZFRvQ29tcG9zaXRlSW5kZXggPSBmdW5jdGlvbih0KSB7XG4gICAgICAgIGlmICh0KSB7XG4gICAgICAgICAgICBmb3IgKHZhciBlID0gLTEsXG4gICAgICAgICAgICBvID0gMDsgbyA8IHRoaXMuZXF1aXBDb21wb3NpdGVMaXN0Lmxlbmd0aDsgbysrKSBpZiAoIXRoaXMuZXF1aXBDb21wb3NpdGVMaXN0W29dKSB7XG4gICAgICAgICAgICAgICAgMCA9PSBvICYmICh0aGlzLmludHJvZHVjdGlvbkVxdWlwRGF0YSA9IHQsIHRoaXMuTGF5b3V0UHJvcC5kZXN0cm95QWxsQ2hpbGRyZW4oKSwgdGhpcy5zY2hlZHVsZU9uY2UodGhpcy5jaGFuZ2VOb2RlSW5mbyksIHRoaXMuc2NoZWR1bGVPbmNlKHRoaXMuc2hvd05vZGVJbmZvKSksXG4gICAgICAgICAgICAgICAgdGhpcy5lcXVpcENvbXBvc2l0ZUxpc3Rbb10gPSB0LFxuICAgICAgICAgICAgICAgIGUgPSBvO1xuICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIC0gMSAhPSBlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGEgPSB0aGlzLk5vZGVDb21wb3NpdGUuZ2V0Q2hpbGRCeU5hbWUoXCJOb2RlQ29tcG9zaXRlRXF1aXBcIiArIGUpLFxuICAgICAgICAgICAgICAgIGkgPSBmLkRhdGFNZ3IuZ2V0SW5zdGFuY2UoKS5nZXRFcXVpcENmZyh0LmlkKSxcbiAgICAgICAgICAgICAgICByID0gY2MuaW5zdGFudGlhdGUodGhpcy5Ob2RlRXF1aXApO1xuICAgICAgICAgICAgICAgIGEuYWRkQ2hpbGQociksXG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkU3ByaXRlRnJhbWUoaS5idW5kbGVRdWFsaXR5LCBpLmljb25RdWFsaXR5LFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICAgICAgICAgICAgci5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5zcHJpdGVGcmFtZSA9IHRcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICB0aGlzLmxvYWRTcHJpdGVGcmFtZShpLmJ1bmRsZSwgaS5lcXVpcEljb24sXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24odCkge1xuICAgICAgICAgICAgICAgICAgICByLmdldENoaWxkQnlOYW1lKFwiU3BJY29uXCIpLmdldENvbXBvbmVudChjYy5TcHJpdGUpLnNwcml0ZUZyYW1lID0gdFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIHQuc3RyZW5ndGhlbkx2ID4gMCA/IChyLmdldENoaWxkQnlOYW1lKFwiTGFiU3RyZW5ndGhlbkx2XCIpLmFjdGl2ZSA9ICEwLCByLmdldENoaWxkQnlOYW1lKFwiTGFiU3RyZW5ndGhlbkx2XCIpLmdldENvbXBvbmVudChjYy5MYWJlbCkuc3RyaW5nID0gXCIrXCIgKyB0LnN0cmVuZ3RoZW5MdikgOiByLmdldENoaWxkQnlOYW1lKFwiTGFiU3RyZW5ndGhlbkx2XCIpLmFjdGl2ZSA9ICExO1xuICAgICAgICAgICAgICAgIHZhciBuID0gdC5zdGFyTGV2ZWwgPyB0LnN0YXJMZXZlbDogMDtcbiAgICAgICAgICAgICAgICBpZiAobiA+IDApIGZvciAoKGMgPSByLmdldENoaWxkQnlOYW1lKFwiTm9kZVN0YXJcIikpLmFjdGl2ZSA9ICEwLCBvID0gMDsgbyA8IGMuY2hpbGRyZW5Db3VudDsgbysrKSBuID4gbyA/IGNjLmlzVmFsaWQoYy5jaGlsZHJlbltvXSkgJiYgKGMuY2hpbGRyZW5bb10uZ2V0Q2hpbGRCeU5hbWUoXCJTcFN0YXJcIikuYWN0aXZlID0gITApIDogY2MuaXNWYWxpZChjLmNoaWxkcmVuW29dKSAmJiAoYy5jaGlsZHJlbltvXS5nZXRDaGlsZEJ5TmFtZShcIlNwU3RhclwiKS5hY3RpdmUgPSAhMSk7XG4gICAgICAgICAgICAgICAgaWYgKCFjYy5pc1ZhbGlkKHRoaXMuTm9kZUNvbXBvc2l0ZUVxdWlwLmdldENoaWxkQnlOYW1lKFwiTm9kZUVxdWlwXCIpKSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcyA9IGNjLmluc3RhbnRpYXRlKHRoaXMuTm9kZUVxdWlwKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5Ob2RlQ29tcG9zaXRlRXF1aXAuYWRkQ2hpbGQocyksXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubG9hZFNwcml0ZUZyYW1lKGkuYnVuZGxlUXVhbGl0eSwgaS5pY29uUXVhbGl0eSxcbiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24odCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5zcHJpdGVGcmFtZSA9IHRcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubG9hZFNwcml0ZUZyYW1lKGkuYnVuZGxlLCBpLmVxdWlwSWNvbixcbiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24odCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcy5nZXRDaGlsZEJ5TmFtZShcIlNwSWNvblwiKS5nZXRDb21wb25lbnQoY2MuU3ByaXRlKS5zcHJpdGVGcmFtZSA9IHRcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjLCB1ID0gdC5zdGFyTGV2ZWwgPyB0LnN0YXJMZXZlbCArIDEgOiAxO1xuICAgICAgICAgICAgICAgICAgICBpZiAodSA+IDApIGZvciAoKGMgPSBzLmdldENoaWxkQnlOYW1lKFwiTm9kZVN0YXJcIikpLmFjdGl2ZSA9ICEwLCBvID0gMDsgbyA8IGMuY2hpbGRyZW5Db3VudDsgbysrKSB1ID4gbyA/IGNjLmlzVmFsaWQoYy5jaGlsZHJlbltvXSkgJiYgKGMuY2hpbGRyZW5bb10uZ2V0Q2hpbGRCeU5hbWUoXCJTcFN0YXJcIikuYWN0aXZlID0gITAsIHUgPT0gbyArIDEgJiYgbC5Ud2Vlbk1nci5nZXRJbnN0YW5jZSgpLnBsYXlCbGlua0FuaW0oYy5jaGlsZHJlbltvXS5nZXRDaGlsZEJ5TmFtZShcIlNwU3RhclwiKSkpIDogY2MuaXNWYWxpZChjLmNoaWxkcmVuW29dKSAmJiAoYy5jaGlsZHJlbltvXS5nZXRDaGlsZEJ5TmFtZShcIlNwU3RhclwiKS5hY3RpdmUgPSAhMSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5pc0Z1bGxGb3JDb21wb3NpdGVJbmRleCgpID8gKHRoaXMucmVmcmVzaEJ0blN0YXRlKCEwKSwgdGhpcy5yZWZyZXNoVmlkZW9TdGF0ZSghMSkpIDogKHRoaXMucmVmcmVzaEJ0blN0YXRlKCExKSwgdGhpcy5yZWZyZXNoVmlkZW9TdGF0ZSghMCkpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LFxuICAgIGUucHJvdG90eXBlLmNsZWFyRXF1aXBBbmREYXRhID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuaXNMb2FkRW5kID0gITE7XG4gICAgICAgIGZvciAodmFyIHQgPSAwOyB0IDwgdGhpcy5ub2RlQmFnSXRlbUxpc3QubGVuZ3RoOyB0KyspIGNjLmlzVmFsaWQodGhpcy5ub2RlQmFnSXRlbUxpc3RbdF0pICYmIHRoaXMubm9kZUJhZ0l0ZW1MaXN0W3RdLmNoaWxkcmVuQ291bnQgPiAwICYmIHRoaXMubm9kZUJhZ0l0ZW1MaXN0W3RdLmNoaWxkcmVuWzBdLmRlc3Ryb3koKTtcbiAgICAgICAgdGhpcy5ub2RlRXF1aXBJdGVtTGlzdCA9IFtdLFxuICAgICAgICB0aGlzLmRhdGFFcXVpcEl0ZW1MaXN0ID0gW11cbiAgICB9LFxuICAgIGUucHJvdG90eXBlLmZpbHRyYXRlRXF1aXAgPSBmdW5jdGlvbih0KSB7XG4gICAgICAgIGlmICh0aGlzLmN1ckJhZ0xpc3QgPSBbXSwgdCkge1xuICAgICAgICAgICAgdmFyIGUgPSBtLmRlZmF1bHQuZ2V0SW5zdGFuY2UoKS5nZXRPd21lZEVxdWlwRm9yUXVhbGl0eUlkKHQucXVhbGl0eSksXG4gICAgICAgICAgICBvID0gW10sXG4gICAgICAgICAgICBhID0gW107XG4gICAgICAgICAgICBmb3IgKHIgPSAwOyByIDwgZS5sZW5ndGg7IHIrKykgZVtyXS5xdWFsaXR5ID09IHQucXVhbGl0eSA/IGVbcl0uSURDYXJkICE9IHQuSURDYXJkICYmIChvLnB1c2goZVtyXSksIG8uc29ydChmdW5jdGlvbih0LCBlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHQuc3RhckxldmVsIC0gZS5zdGFyTGV2ZWxcbiAgICAgICAgICAgIH0pKSA6IGEucHVzaChlW3JdKTtcbiAgICAgICAgICAgIGZvciAodGhpcy5jdXJCYWdMaXN0ID0gbywgciA9IDA7IHIgPCBhLmxlbmd0aDsgcisrKSB0aGlzLmN1ckJhZ0xpc3QucHVzaChhW3JdKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IG0uZGVmYXVsdC5nZXRJbnN0YW5jZSgpLmdldE93bmVkRXF1aXBMaXN0KCksIHIgPSAwOyByIDwgaS5sZW5ndGg7IHIrKykgdGhpcy5jdXJCYWdMaXN0LnB1c2goaVtyXSk7XG4gICAgICAgICAgICB0aGlzLmN1ckJhZ0xpc3Quc29ydChmdW5jdGlvbih0LCBlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGUucXVhbGl0eSAtIHQucXVhbGl0eVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH0sXG4gICAgZS5wcm90b3R5cGUuZ2V0Q29tcG9zaXRlRXF1aXBTdGFyTnVtID0gZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBlID0gITEsXG4gICAgICAgIG8gPSAwOyBvIDwgdGhpcy5lcXVpcENvbXBvc2l0ZUxpc3QubGVuZ3RoOyBvKyspIGlmICh0aGlzLmVxdWlwQ29tcG9zaXRlTGlzdFtvXSkge1xuICAgICAgICAgICAgdC5pZCA9PSB0aGlzLmVxdWlwQ29tcG9zaXRlTGlzdFtvXS5pZCAmJiB0LnN0YXJMZXZlbCA9PSB0aGlzLmVxdWlwQ29tcG9zaXRlTGlzdFtvXS5zdGFyTGV2ZWwgJiYgKGUgPSAhMCk7XG4gICAgICAgICAgICBicmVha1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlXG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5nZXRDb21wb3NpdGVFcXVpcFN0YXJOdW0yID0gZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBlID0gITEsXG4gICAgICAgIG8gPSAwOyBvIDwgdGhpcy5lcXVpcENvbXBvc2l0ZUxpc3QubGVuZ3RoOyBvKyspIGlmICh0aGlzLmVxdWlwQ29tcG9zaXRlTGlzdFtvXSkge1xuICAgICAgICAgICAgdC5zdGFyTGV2ZWwgPT0gdGhpcy5lcXVpcENvbXBvc2l0ZUxpc3Rbb10uc3RhckxldmVsICYmIChlID0gITApO1xuICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZVxuICAgIH0sXG4gICAgZS5wcm90b3R5cGUuZ2V0Q29tcG9zaXRlRXF1aXBRdWFsaXR5TnVtID0gZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBlID0gITEsXG4gICAgICAgIG8gPSAwOyBvIDwgdGhpcy5lcXVpcENvbXBvc2l0ZUxpc3QubGVuZ3RoOyBvKyspIGlmICh0aGlzLmVxdWlwQ29tcG9zaXRlTGlzdFtvXSkge1xuICAgICAgICAgICAgdC5xdWFsaXR5ID09IHRoaXMuZXF1aXBDb21wb3NpdGVMaXN0W29dLnF1YWxpdHkgJiYgKGUgPSAhMCk7XG4gICAgICAgICAgICBicmVha1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlXG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5pc0Z1bGxGb3JDb21wb3NpdGVJbmRleCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBmb3IgKHZhciB0ID0gITAsXG4gICAgICAgIGUgPSAwOyBlIDwgdGhpcy5lcXVpcENvbXBvc2l0ZUxpc3QubGVuZ3RoOyBlKyspIGlmICghdGhpcy5lcXVpcENvbXBvc2l0ZUxpc3RbZV0pIHtcbiAgICAgICAgICAgIHQgPSAhMTtcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRcbiAgICB9LFxuICAgIGUucHJvdG90eXBlLmlzTnVsbEZvckNvbXBvc2l0ZUluZGV4ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGZvciAodmFyIHQgPSAhMCxcbiAgICAgICAgZSA9IDA7IGUgPCB0aGlzLmVxdWlwQ29tcG9zaXRlTGlzdC5sZW5ndGg7IGUrKykgdGhpcy5lcXVpcENvbXBvc2l0ZUxpc3RbZV0gJiYgKHQgPSAhMSk7XG4gICAgICAgIHJldHVybiB0XG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5jbGVhckNvbXBvc2l0ZUluZGV4ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGZvciAodmFyIHQgPSAwOyB0IDwgdGhpcy5Ob2RlQ29tcG9zaXRlLmNoaWxkcmVuQ291bnQ7IHQrKykgY2MuaXNWYWxpZCh0aGlzLk5vZGVDb21wb3NpdGUuY2hpbGRyZW5bdF0uZ2V0Q2hpbGRCeU5hbWUoXCJOb2RlRXF1aXBcIikpICYmIHRoaXMuTm9kZUNvbXBvc2l0ZS5jaGlsZHJlblt0XS5nZXRDaGlsZEJ5TmFtZShcIk5vZGVFcXVpcFwiKS5kZXN0cm95KClcbiAgICB9LFxuICAgIGUucHJvdG90eXBlLmNsZWFyQ29tcG9zaXRlRGF0YSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBmb3IgKHZhciB0ID0gMDsgdCA8IHRoaXMuZXF1aXBDb21wb3NpdGVMaXN0Lmxlbmd0aDsgdCsrKSB0aGlzLmVxdWlwQ29tcG9zaXRlTGlzdFt0XSA9IG51bGxcbiAgICB9LFxuICAgIGUucHJvdG90eXBlLnBsYXlIQ0VmZiA9IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgdmFyIGUgPSB0aGlzO1xuICAgICAgICB0aGlzLk5vZGVFRmZfSEMubm9kZS5hY3RpdmUgPSAhMCxcbiAgICAgICAgdGhpcy5Ob2RlRUZmX0hDLmdldENvbXBvbmVudChzcC5Ta2VsZXRvbikuc2V0QW5pbWF0aW9uKDAsIFwiYW5pMVwiLCAhMSksXG4gICAgICAgIHRoaXMuTm9kZUVGZl9IQy5nZXRDb21wb25lbnQoc3AuU2tlbGV0b24pLnNldENvbXBsZXRlTGlzdGVuZXIoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBlLk5vZGVFRmZfSEMubm9kZS5hY3RpdmUgPSAhMSxcbiAgICAgICAgICAgIHQgJiYgdCgpXG4gICAgICAgIH0pXG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5jYWxsYmFja1BhZ2VWaWV3ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuaW5pdEN1clBhZ2UoKSxcbiAgICAgICAgdGhpcy5sb2FkUGFnZU51bSgpXG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5jbG9zZVZpZXcgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5jbG9zZVVJKClcbiAgICB9LFxuICAgIGUucHJvdG90eXBlLnNob3dOb2RlSW5mbyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLk5vZGVJbmZvLmFjdGl2ZSA9ICEwXG4gICAgfSxcbiAgICBlLnByb3RvdHlwZS5oaWRlTm9kZUluZm8gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5Ob2RlSW5mby5hY3RpdmUgPSAhMVxuICAgIH0sXG4gICAgZS5wcm90b3R5cGUuY2hhbmdlTm9kZUluZm8gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHQgPSBmLkRhdGFNZ3IuZ2V0SW5zdGFuY2UoKS5nZXRFcXVpcENmZyh0aGlzLmludHJvZHVjdGlvbkVxdWlwRGF0YS5pZCk7XG4gICAgICAgIGlmICh0aGlzLkxhYk5hbWUuc3RyaW5nID0gdC5lcXVpcE5hbWUsIHQuTHZBdGspIHtcbiAgICAgICAgICAgIHZhciBlID0gcC5VdGlscy5nZXRUYWJlbEFycih0LmF0ayksXG4gICAgICAgICAgICBvID0gcC5VdGlscy5nZXRUYWJlbEFycih0Lkx2QXRrKSxcbiAgICAgICAgICAgIGEgPSBbXCIwXCIsIFwiMFwiXTtcbiAgICAgICAgICAgIGlmICh0aGlzLmludHJvZHVjdGlvbkVxdWlwRGF0YS5zdGFyTGV2ZWwgJiYgdGhpcy5pbnRyb2R1Y3Rpb25FcXVpcERhdGEuc3RhckxldmVsID4gMCkge1xuICAgICAgICAgICAgICAgIHZhciBpID0gZi5EYXRhTWdyLmdldEluc3RhbmNlKCkuZ2V0RXF1aXBTdGFyQ2ZnKHRoaXMuaW50cm9kdWN0aW9uRXF1aXBEYXRhLmlkLCB0aGlzLmludHJvZHVjdGlvbkVxdWlwRGF0YS5zdGFyTGV2ZWwpO1xuICAgICAgICAgICAgICAgIGEgPSBwLlV0aWxzLmdldFRhYmVsQXJyKGkuYXRrKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHIgPSBOdW1iZXIoZVswXSkgKyBOdW1iZXIob1swXSkgKiB0aGlzLmludHJvZHVjdGlvbkVxdWlwRGF0YS5zdHJlbmd0aGVuTHYgKyBOdW1iZXIoYVswXSksXG4gICAgICAgICAgICBuID0gTnVtYmVyKGVbMV0pICsgTnVtYmVyKG9bMV0pICogdGhpcy5pbnRyb2R1Y3Rpb25FcXVpcERhdGEuc3RyZW5ndGhlbkx2ICsgTnVtYmVyKGFbMV0pLFxuICAgICAgICAgICAgcyA9IHRoaXMuTGF5b3V0UHJvcC5nZXRDaGlsZEJ5TmFtZShcIkxheW91dFByb3AxXCIpO1xuICAgICAgICAgICAgY2MuaXNWYWxpZChzKSB8fCAoKHMgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLkxheW91dE5vZGVQcm9wKSkucGFyZW50ID0gdGhpcy5MYXlvdXRQcm9wLCBzLm5hbWUgPSBcIkxheW91dFByb3AxXCIpO1xuICAgICAgICAgICAgdmFyIGMgPSBuIC0gcjtcbiAgICAgICAgICAgIHMuZ2V0Q2hpbGRCeU5hbWUoXCJMYWJQcm9wXCIpLmdldENvbXBvbmVudChjYy5SaWNoVGV4dCkuc3RyaW5nID0gXCI8Y29sb3I9I2ZmZmZmZj7mlLvlh7vlipvvvJo8L2M+PGNvbG9yPSMzYmFjZjM+XCIgKyByICsgXCJ+XCIgKyBuICsgXCI8L2NvbG9yPlwiLFxuICAgICAgICAgICAgdGhpcy5sb2FkUHJvcENoYW5nZSg4LCBzLCBjKVxuICAgICAgICB9XG4gICAgICAgIGlmICh0Lkx2SHApIHtcbiAgICAgICAgICAgIHZhciBsID0gdGhpcy5pbnRyb2R1Y3Rpb25FcXVpcERhdGEuc3RhckxldmVsID8gZi5EYXRhTWdyLmdldEluc3RhbmNlKCkuZ2V0RXF1aXBTdGFyQ2ZnKHRoaXMuaW50cm9kdWN0aW9uRXF1aXBEYXRhLmlkLCB0aGlzLmludHJvZHVjdGlvbkVxdWlwRGF0YS5zdGFyTGV2ZWwpLmhwOiAwO1xuICAgICAgICAgICAgdGhpcy5hZGRQcm9wTm9kZSg5LCB0LmhwICsgdC5MdkhwICogdGhpcy5pbnRyb2R1Y3Rpb25FcXVpcERhdGEuc3RyZW5ndGhlbkx2ICsgbClcbiAgICAgICAgfVxuICAgICAgICB0LmF0a1NwZWVkICYmIChsID0gdGhpcy5pbnRyb2R1Y3Rpb25FcXVpcERhdGEuc3RhckxldmVsID8gZi5EYXRhTWdyLmdldEluc3RhbmNlKCkuZ2V0RXF1aXBTdGFyQ2ZnKHRoaXMuaW50cm9kdWN0aW9uRXF1aXBEYXRhLmlkLCB0aGlzLmludHJvZHVjdGlvbkVxdWlwRGF0YS5zdGFyTGV2ZWwpLmF0a1NwZWVkOiAwLCB0aGlzLmFkZFByb3BOb2RlKDMsIHQuYXRrU3BlZWQgKyBsKSksXG4gICAgICAgIHQuYXRrQ3JhenlQcm9iICYmIChsID0gdGhpcy5pbnRyb2R1Y3Rpb25FcXVpcERhdGEuc3RhckxldmVsID8gZi5EYXRhTWdyLmdldEluc3RhbmNlKCkuZ2V0RXF1aXBTdGFyQ2ZnKHRoaXMuaW50cm9kdWN0aW9uRXF1aXBEYXRhLmlkLCB0aGlzLmludHJvZHVjdGlvbkVxdWlwRGF0YS5zdGFyTGV2ZWwpLmF0a0NyYXp5UHJvYjogMCwgdGhpcy5hZGRQcm9wTm9kZSg0LCB0LmF0a0NyYXp5UHJvYiArIGwpKSxcbiAgICAgICAgdC5hdGtDcmF6eUh1cnQgJiYgKGwgPSB0aGlzLmludHJvZHVjdGlvbkVxdWlwRGF0YS5zdGFyTGV2ZWwgPyBmLkRhdGFNZ3IuZ2V0SW5zdGFuY2UoKS5nZXRFcXVpcFN0YXJDZmcodGhpcy5pbnRyb2R1Y3Rpb25FcXVpcERhdGEuaWQsIHRoaXMuaW50cm9kdWN0aW9uRXF1aXBEYXRhLnN0YXJMZXZlbCkuYXRrQ3JhenlIdXJ0OiAwLCB0aGlzLmFkZFByb3BOb2RlKDUsIHQuYXRrQ3JhenlIdXJ0ICsgbCkpLFxuICAgICAgICB0LnN1Ykh1cnQgJiYgKGwgPSB0aGlzLmludHJvZHVjdGlvbkVxdWlwRGF0YS5zdGFyTGV2ZWwgPyBmLkRhdGFNZ3IuZ2V0SW5zdGFuY2UoKS5nZXRFcXVpcFN0YXJDZmcodGhpcy5pbnRyb2R1Y3Rpb25FcXVpcERhdGEuaWQsIHRoaXMuaW50cm9kdWN0aW9uRXF1aXBEYXRhLnN0YXJMZXZlbCkuc3ViSHVydDogMCwgdGhpcy5hZGRQcm9wTm9kZSg2LCB0LnN1Ykh1cnQgKyBsKSksXG4gICAgICAgIHQuZG9kZ2VIdXJ0UHJvYiAmJiAobCA9IHRoaXMuaW50cm9kdWN0aW9uRXF1aXBEYXRhLnN0YXJMZXZlbCA/IGYuRGF0YU1nci5nZXRJbnN0YW5jZSgpLmdldEVxdWlwU3RhckNmZyh0aGlzLmludHJvZHVjdGlvbkVxdWlwRGF0YS5pZCwgdGhpcy5pbnRyb2R1Y3Rpb25FcXVpcERhdGEuc3RhckxldmVsKS5kb2RnZUh1cnRQcm9iOiAwLCB0aGlzLmFkZFByb3BOb2RlKDcsIHQuZG9kZ2VIdXJ0UHJvYiArIGwpKVxuICAgIH0sXG4gICAgZS5wcm90b3R5cGUuYWRkUHJvcE5vZGUgPSBmdW5jdGlvbih0LCBlKSB7XG4gICAgICAgIHZhciBvID0gdGhpcy5MYXlvdXRQcm9wLmdldENoaWxkQnlOYW1lKFwiTGF5b3V0UHJvcFwiICsgdCk7XG4gICAgICAgIGNjLmlzVmFsaWQobykgfHwgKChvID0gY2MuaW5zdGFudGlhdGUodGhpcy5MYXlvdXROb2RlUHJvcCkpLnBhcmVudCA9IHRoaXMuTGF5b3V0UHJvcCwgby5uYW1lID0gXCJMYXlvdXRQcm9wXCIgKyB0KTtcbiAgICAgICAgdmFyIGEgPSBtLmRlZmF1bHQuZ2V0SW5zdGFuY2UoKS5nZXRQcm9wTmFtZUZvclByb3BUeXBlKHQpO1xuICAgICAgICBvLmdldENoaWxkQnlOYW1lKFwiTGFiUHJvcFwiKS5nZXRDb21wb25lbnQoY2MuUmljaFRleHQpLnN0cmluZyA9IFwiPGNvbG9yPSNmZmZmZmY+XCIgKyBhICsgXCLvvJo8L2M+PGNvbG9yPSMzYmFjZjM+XCIgKyBlICsgbS5kZWZhdWx0LmdldEluc3RhbmNlKCkuZ2V0UHJvcFBlcmNlbnQodCkgKyBcIjwvY29sb3I+XCIsXG4gICAgICAgIHRoaXMubG9hZFByb3BDaGFuZ2UodCwgbywgZSlcbiAgICB9LFxuICAgIGUucHJvdG90eXBlLmxvYWRQcm9wQ2hhbmdlID0gZnVuY3Rpb24odCwgZSwgbykge1xuICAgICAgICB2YXIgYSA9IGUuZ2V0Q2hpbGRCeU5hbWUoXCJTcENoYW5nZVwiKSxcbiAgICAgICAgaSA9IGUuZ2V0Q2hpbGRCeU5hbWUoXCJMYWJDaGFuZ2VcIik7XG4gICAgICAgIGlmIChjYy5pc1ZhbGlkKGEpICYmIGNjLmlzVmFsaWQoaSkpIHtcbiAgICAgICAgICAgIHZhciByID0gMCxcbiAgICAgICAgICAgIG4gPSBmLkRhdGFNZ3IuZ2V0SW5zdGFuY2UoKS5nZXRFcXVpcFN0YXJDZmcodGhpcy5pbnRyb2R1Y3Rpb25FcXVpcERhdGEuaWQsIHRoaXMuaW50cm9kdWN0aW9uRXF1aXBEYXRhLnN0YXJMZXZlbCk7XG4gICAgICAgICAgICBpZiAoOCA9PSB0KSB7XG4gICAgICAgICAgICAgICAgdmFyIHMgPSBwLlV0aWxzLmdldFRhYmVsQXJyKG4uYXRrKTtcbiAgICAgICAgICAgICAgICByID0gKE51bWJlcihzWzFdKSArIE51bWJlcihzWzBdKSkgLyAyIC0gMFxuICAgICAgICAgICAgfSBlbHNlIDkgPT0gdCA/IHIgPSBuLmhwIC0gMCA6IDMgPT0gdCA/IHIgPSBuLmF0a1NwZWVkIC0gMCA6IDQgPT0gdCA/IHIgPSBuLmF0a0NyYXp5UHJvYiAtIDAgOiA1ID09IHQgPyByID0gbi5hdGtDcmF6eUh1cnQgLSAwIDogNiA9PSB0ID8gciA9IG4uc3ViSHVydCAtIDAgOiA3ID09IHQgJiYgKHIgPSBuLmRvZGdlSHVydFByb2IgLSAwKTtcbiAgICAgICAgICAgIDAgPT0gciA/IChhLmFjdGl2ZSA9ICExLCBpLmFjdGl2ZSA9ICExKSA6IChpLmNvbG9yID0gciA+IDAgPyBjYy5jb2xvcig2NCwgMjIwLCA0NykgOiBjYy5jb2xvcigyNDYsIDQ3LCAwKSwgaS5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IDggPT0gdCA/IE1hdGguY2VpbChvKSArIFwiflwiICsgTWF0aC5jZWlsKHIgKyBvKSA6IFwiXCIgKyBNYXRoLmNlaWwoTWF0aC5hYnMociArIG8pKSlcbiAgICAgICAgfSBlbHNlIGNvbnNvbGUubG9nKFwi5LiN5a2Y5Zyo77yB77yB77yBXCIpXG4gICAgfSxcbiAgICByKFtDKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwiQnRuQmFja1wiLCB2b2lkIDApLFxuICAgIHIoW0MoY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJCdG5Db21wb3NpdGVcIiwgdm9pZCAwKSxcbiAgICByKFtDKHtcbiAgICAgICAgdHlwZTogY2MuTm9kZSxcbiAgICAgICAgdG9vbHRpcDogXCLoo4XlpIflkIjmiJDoioLngrlcIlxuICAgIH0pXSwgZS5wcm90b3R5cGUsIFwiTm9kZUNvbXBvc2l0ZVwiLCB2b2lkIDApLFxuICAgIHIoW0Moe1xuICAgICAgICB0eXBlOiBjYy5Ob2RlLFxuICAgICAgICB0b29sdGlwOiBcIuijheWkh+WQiOaIkOS9jVwiXG4gICAgfSldLCBlLnByb3RvdHlwZSwgXCJOb2RlQ29tcG9zaXRlRXF1aXBcIiwgdm9pZCAwKSxcbiAgICByKFtDKHtcbiAgICAgICAgdHlwZTogY2MuTm9kZSxcbiAgICAgICAgdG9vbHRpcDogXCLlkIjmiJDoo4XlpIdcIlxuICAgIH0pXSwgZS5wcm90b3R5cGUsIFwiTm9kZUVxdWlwXCIsIHZvaWQgMCksXG4gICAgcihbQyh7XG4gICAgICAgIHR5cGU6IGNjLk5vZGUsXG4gICAgICAgIHRvb2x0aXA6IFwi6KOF5aSH5L+h5oGvXCJcbiAgICB9KV0sIGUucHJvdG90eXBlLCBcIk5vZGVJbmZvXCIsIHZvaWQgMCksXG4gICAgcihbQyh7XG4gICAgICAgIHR5cGU6IGNjLlByZWZhYixcbiAgICAgICAgdG9vbHRpcDogXCLoo4XlpIfpooTliLZcIlxuICAgIH0pXSwgZS5wcm90b3R5cGUsIFwiUHJlZmFiRXF1aXBcIiwgdm9pZCAwKSxcbiAgICByKFtDKHtcbiAgICAgICAgdHlwZTogY2MuTm9kZSxcbiAgICAgICAgdG9vbHRpcDogXCLog4zljIXnqbrlo7NpdGVtXCJcbiAgICB9KV0sIGUucHJvdG90eXBlLCBcIk5vZGVCYWdJdGVtXCIsIHZvaWQgMCksXG4gICAgcihbQyh7XG4gICAgICAgIHR5cGU6IGNjLk5vZGUsXG4gICAgICAgIHRvb2x0aXA6IFwi6IOM5YyF6aG15pWw5qCH562+XCJcbiAgICB9KV0sIGUucHJvdG90eXBlLCBcIkxhYlBhZ2VOdW1cIiwgdm9pZCAwKSxcbiAgICByKFtDKGNjLlBhZ2VWaWV3KV0sIGUucHJvdG90eXBlLCBcIlBhZ2VWaWV3QmFnXCIsIHZvaWQgMCksXG4gICAgcihbQyhjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcIkNvbnRlbnRCYWdcIiwgdm9pZCAwKSxcbiAgICByKFtDKGNjLk5vZGUpXSwgZS5wcm90b3R5cGUsIFwiSW5kaWNhdG9yXCIsIHZvaWQgMCksXG4gICAgcihbQyhzcC5Ta2VsZXRvbildLCBlLnByb3RvdHlwZSwgXCJOb2RlRUZmX0hDXCIsIHZvaWQgMCksXG4gICAgcihbQyhjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcIk5vZGVDb3N0XCIsIHZvaWQgMCksXG4gICAgcihbQyhjYy5MYWJlbCldLCBlLnByb3RvdHlwZSwgXCJMYWJDb3N0XCIsIHZvaWQgMCksXG4gICAgcihbQyhjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcIk5vZGVWaWRlb1wiLCB2b2lkIDApLFxuICAgIHIoW0MoY2MuTm9kZSldLCBlLnByb3RvdHlwZSwgXCJMYXlvdXRQcm9wXCIsIHZvaWQgMCksXG4gICAgcihbQyhjYy5Ob2RlKV0sIGUucHJvdG90eXBlLCBcIkxheW91dE5vZGVQcm9wXCIsIHZvaWQgMCksXG4gICAgcihbQyhjYy5MYWJlbCldLCBlLnByb3RvdHlwZSwgXCJMYWJOYW1lXCIsIHZvaWQgMCksXG4gICAgcihba10sIGUpXG59IChuLmRlZmF1bHQpO1xuby5kZWZhdWx0ID0gUyJdfQ==