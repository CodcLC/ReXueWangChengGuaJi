
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/Weapon.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'bca1fuOJHlA94gRlPmT6ZCH', 'Weapon');
// scripts/Weapon.js

"use strict";

var t = require;
var e = module;
var o = exports;

var _a,
    i = void 0 && (void 0).__extends || (_a = function a(t, e) {
  return (_a = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (t, e) {
    t.__proto__ = e;
  } || function (t, e) {
    for (var o in e) {
      Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
    }
  })(t, e);
}, function (t, e) {
  function o() {
    this.constructor = t;
  }

  _a(t, e), t.prototype = null === e ? Object.create(e) : (o.prototype = e.prototype, new o());
}),
    r = void 0 && (void 0).__decorate || function (t, e, o, a) {
  var i,
      r = arguments.length,
      n = r < 3 ? e : null === a ? a = Object.getOwnPropertyDescriptor(e, o) : a;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) n = Reflect.decorate(t, e, o, a);else for (var s = t.length - 1; s >= 0; s--) {
    (i = t[s]) && (n = (r < 3 ? i(n) : r > 3 ? i(e, o, n) : i(e, o)) || n);
  }
  return r > 3 && n && Object.defineProperty(e, o, n), n;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});

var n = t("Monster"),
    s = t("ObjectsParent"),
    c = cc._decorator,
    l = c.ccclass,
    u = c.property,
    p = function (t) {
  function e() {
    var e = null !== t && t.apply(this, arguments) || this;
    return e.player = null, e.isAttackState = !1, e;
  }

  return i(e, t), e.prototype.onCollisionEnter = function (t) {
    this.isAttackState || (console.log("碰撞体：", t), t.node.getComponent(n["default"]).objectState != s.EnumObjectState.Die && (this.isAttackState = !0, console.log("碰撞检测开始")));
  }, e.prototype.onCollisionExit = function () {
    this.isAttackState = !1, console.log("碰撞检测离开");
  }, r([u({
    type: cc.Node,
    tooltip: "玩家"
  })], e.prototype, "player", void 0), r([l], e);
}(cc.Component);

o["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcV2VhcG9uLmpzIl0sIm5hbWVzIjpbInQiLCJyZXF1aXJlIiwiZSIsIm1vZHVsZSIsIm8iLCJleHBvcnRzIiwiYSIsImkiLCJfX2V4dGVuZHMiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIkFycmF5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiY29uc3RydWN0b3IiLCJjcmVhdGUiLCJyIiwiX19kZWNvcmF0ZSIsImFyZ3VtZW50cyIsImxlbmd0aCIsIm4iLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJSZWZsZWN0IiwiZGVjb3JhdGUiLCJzIiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImMiLCJjYyIsIl9kZWNvcmF0b3IiLCJsIiwiY2NjbGFzcyIsInUiLCJwcm9wZXJ0eSIsInAiLCJhcHBseSIsInBsYXllciIsImlzQXR0YWNrU3RhdGUiLCJvbkNvbGxpc2lvbkVudGVyIiwiY29uc29sZSIsImxvZyIsIm5vZGUiLCJnZXRDb21wb25lbnQiLCJvYmplY3RTdGF0ZSIsIkVudW1PYmplY3RTdGF0ZSIsIkRpZSIsIm9uQ29sbGlzaW9uRXhpdCIsInR5cGUiLCJOb2RlIiwidG9vbHRpcCIsIkNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxDQUFDLEdBQUdDLE9BQVI7QUFDQSxJQUFJQyxDQUFDLEdBQUdDLE1BQVI7QUFDQSxJQUFJQyxDQUFDLEdBQUdDLE9BQVI7O0FBQ0EsSUFBSUMsRUFBSjtBQUFBLElBQU9DLENBQUMsR0FBRyxVQUFRLFNBQUtDLFNBQWIsS0FBMkJGLEVBQUMsR0FBRyxXQUFTTixDQUFULEVBQVlFLENBQVosRUFBZTtFQUNyRCxPQUFPLENBQUNJLEVBQUMsR0FBR0csTUFBTSxDQUFDQyxjQUFQLElBQXlCO0lBQ2pDQyxTQUFTLEVBQUU7RUFEc0IsYUFHMUJDLEtBSDBCLElBSXJDLFVBQVNaLENBQVQsRUFB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QixLQUFLLENBSGhDLENBUk0sRUFZUEssQ0FBQyxDQUFDLENBQUNjLENBQUQsQ0FBRCxFQUFNOUIsQ0FBTixDQVpEO0FBYUgsQ0FwQkcsQ0FvQkQ0QixFQUFFLENBQUNzQixTQXBCRixDQUxKOztBQTBCQWhELENBQUMsV0FBRCxHQUFZZ0MsQ0FBWiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHQgPSByZXF1aXJlO1xudmFyIGUgPSBtb2R1bGU7XG52YXIgbyA9IGV4cG9ydHM7XG52YXIgYSwgaSA9IHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMgfHwgKGEgPSBmdW5jdGlvbih0LCBlKSB7XG4gICAgcmV0dXJuIChhID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IHtcbiAgICAgICAgX19wcm90b19fOiBbXVxuICAgIH1cbiAgICBpbnN0YW5jZW9mIEFycmF5ICYmXG4gICAgZnVuY3Rpb24odCwgZSkge1xuICAgICAgICB0Ll9fcHJvdG9fXyA9IGVcbiAgICB9IHx8XG4gICAgZnVuY3Rpb24odCwgZSkge1xuICAgICAgICBmb3IgKHZhciBvIGluIGUpIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLCBvKSAmJiAodFtvXSA9IGVbb10pXG4gICAgfSkodCwgZSlcbn0sXG5mdW5jdGlvbih0LCBlKSB7XG4gICAgZnVuY3Rpb24gbygpIHtcbiAgICAgICAgdGhpcy5jb25zdHJ1Y3RvciA9IHRcbiAgICB9XG4gICAgYSh0LCBlKSxcbiAgICB0LnByb3RvdHlwZSA9IG51bGwgPT09IGUgPyBPYmplY3QuY3JlYXRlKGUpIDogKG8ucHJvdG90eXBlID0gZS5wcm90b3R5cGUsIG5ldyBvKVxufSksXG5yID0gdGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUgfHxcbmZ1bmN0aW9uKHQsIGUsIG8sIGEpIHtcbiAgICB2YXIgaSwgciA9IGFyZ3VtZW50cy5sZW5ndGgsXG4gICAgbiA9IHIgPCAzID8gZTogbnVsbCA9PT0gYSA/IGEgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIG8pIDogYTtcbiAgICBpZiAoXCJvYmplY3RcIiA9PSB0eXBlb2YgUmVmbGVjdCAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUpIG4gPSBSZWZsZWN0LmRlY29yYXRlKHQsIGUsIG8sIGEpO1xuICAgIGVsc2UgZm9yICh2YXIgcyA9IHQubGVuZ3RoIC0gMTsgcyA+PSAwOyBzLS0pKGkgPSB0W3NdKSAmJiAobiA9IChyIDwgMyA/IGkobikgOiByID4gMyA/IGkoZSwgbywgbikgOiBpKGUsIG8pKSB8fCBuKTtcbiAgICByZXR1cm4gciA+IDMgJiYgbiAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgbywgbiksXG4gICAgblxufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiAhMFxufSk7XG52YXIgbiA9IHQoXCJNb25zdGVyXCIpLFxucyA9IHQoXCJPYmplY3RzUGFyZW50XCIpLFxuYyA9IGNjLl9kZWNvcmF0b3IsXG5sID0gYy5jY2NsYXNzLFxudSA9IGMucHJvcGVydHksXG5wID0gZnVuY3Rpb24odCkge1xuICAgIGZ1bmN0aW9uIGUoKSB7XG4gICAgICAgIHZhciBlID0gbnVsbCAhPT0gdCAmJiB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgcmV0dXJuIGUucGxheWVyID0gbnVsbCxcbiAgICAgICAgZS5pc0F0dGFja1N0YXRlID0gITEsXG4gICAgICAgIGVcbiAgICB9XG4gICAgcmV0dXJuIGkoZSwgdCksXG4gICAgZS5wcm90b3R5cGUub25Db2xsaXNpb25FbnRlciA9IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgdGhpcy5pc0F0dGFja1N0YXRlIHx8IChjb25zb2xlLmxvZyhcIueisOaSnuS9k++8mlwiLCB0KSwgdC5ub2RlLmdldENvbXBvbmVudChuLmRlZmF1bHQpLm9iamVjdFN0YXRlICE9IHMuRW51bU9iamVjdFN0YXRlLkRpZSAmJiAodGhpcy5pc0F0dGFja1N0YXRlID0gITAsIGNvbnNvbGUubG9nKFwi56Kw5pKe5qOA5rWL5byA5aeLXCIpKSlcbiAgICB9LFxuICAgIGUucHJvdG90eXBlLm9uQ29sbGlzaW9uRXhpdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmlzQXR0YWNrU3RhdGUgPSAhMSxcbiAgICAgICAgY29uc29sZS5sb2coXCLnorDmkp7mo4DmtYvnprvlvIBcIilcbiAgICB9LFxuICAgIHIoW3Uoe1xuICAgICAgICB0eXBlOiBjYy5Ob2RlLFxuICAgICAgICB0b29sdGlwOiBcIueOqeWutlwiXG4gICAgfSldLCBlLnByb3RvdHlwZSwgXCJwbGF5ZXJcIiwgdm9pZCAwKSxcbiAgICByKFtsXSwgZSlcbn0gKGNjLkNvbXBvbmVudCk7XG5vLmRlZmF1bHQgPSBwIl19