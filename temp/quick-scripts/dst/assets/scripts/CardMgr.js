
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/CardMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6be93ZhvZVFlY+n+FHg6zTp', 'CardMgr');
// scripts/CardMgr.js

"use strict";

var t = require;
var e = module;
var o = exports;

var a = void 0 && (void 0).__decorate || function (t, e, o, a) {
  var i,
      r = arguments.length,
      n = r < 3 ? e : null === a ? a = Object.getOwnPropertyDescriptor(e, o) : a;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) n = Reflect.decorate(t, e, o, a);else for (var s = t.length - 1; s >= 0; s--) {
    (i = t[s]) && (n = (r < 3 ? i(n) : r > 3 ? i(e, o, n) : i(e, o)) || n);
  }
  return r > 3 && n && Object.defineProperty(e, o, n), n;
};

Object.defineProperty(o, "__esModule", {
  value: !0
});
var i = t("EventMgr"),
    r = t("HttpMgr"),
    n = t("UIMgr"),
    s = t("CacheUtils"),
    c = t("UIUtils"),
    l = t("Utils"),
    u = t("Config"),
    p = cc._decorator,
    g = p.ccclass,
    d = (p.property, function () {
  function t() {
    this.verifykey = "realName_sf", this.verifyWCNkey = "realName_sf_wcn", this.isWcn = !1;
  }

  var e;
  return e = t, t.getInstance = function () {
    return null == this.instance && (this.instance = new e()), this.instance;
  }, t.prototype.isVerify = function () {
    return !!s.CacheUtils.getData(this.verifykey);
  }, t.prototype.isWCN = function () {
    var t = s.CacheUtils.getData(this.verifyWCNkey);
    return !(!t || "1" != t);
  }, t.prototype.toGame = function (t) {
    var e = this;
    this.isWCN() ? this.getBirthday(function (o) {
      o ? e.getIsEnjoyTime() ? (t && t(), e.sceduleEndGame(), n.UIMgr.getInstance().openUI(u.UIID.UITips, -1, "未成年只能在晚上8-9点玩一个小时")) : i.EventMgr.getInstance().emit("WCNGameEnd", "未成年只能在晚上8-9点玩一个小时") : i.EventMgr.getInstance().emit("WCNGameEnd", "未成年只有周五，周六，周日和节假日才能玩");
    }) : t && t();
  }, t.prototype.vifyCardId = function (t, e, o) {
    var a = this;
    if (null == t || t.length <= 0 || null == e || e.length <= 0) n.UIMgr.getInstance().openUI(u.UIID.UITips, -1, "不能为空");else {
      var i = l.Utils.isCardID(e);
      if (0 == i) r.HttpMgr.getInstance().httpPost({
        ai: new Date().getTime() + "",
        cardId: e,
        name: t
      }, function (t) {
        var i = JSON.parse(t);
        if (200 == i.code && 0 == i.data.status) s.CacheUtils.saveData(a.verifykey, "1"), l.Utils.checkAdult(e) ? (o && o(!0), s.CacheUtils.saveData(a.verifyWCNkey, "0")) : (s.CacheUtils.saveData(a.verifyWCNkey, "1"), a.isWcn = !0, a.getBirthday(function (t) {
          t ? a.getIsEnjoyTime() ? (o(!0), a.sceduleEndGame(), n.UIMgr.getInstance().openUI(u.UIID.UIExit, -1)) : n.UIMgr.getInstance().openUI(u.UIID.UIExit, -1) : o && n.UIMgr.getInstance().openUI(u.UIID.UIExit, -1);
        }));else {
          var r = "校验失败";
          1001 == i.code ? r = "系统错误" : 1002 == i.code ? r = "接口请求的资源不存在" : 1003 == i.code ? r = "接口请求方式错误" : 1004 == i.code ? r = "接口请求核心参数缺失" : 1005 == i.code ? r = "接口请求IP地址非法" : 1006 == i.code ? r = "接口请求超出流量限制" : 1007 == i.code ? r = "接口请求过期" : 1008 == i.code ? r = "接口请求方身份非法" : 1009 == i.code ? r = "接口请求方权限未启用" : 1010 == i.code ? r = "接口请求方无该接口权限" : 1011 == i.code ? r = "接口请求方身份核验错误" : 1012 == i.code ? r = "接口请求报文核验失败" : 2001 == i.code ? r = "身份证号格式校验失败" : 2002 == i.code ? r = "实名认证条目已达上限" : 2003 == i.code ? r = "无该编码提交的实名认证记录" : 2004 == i.code ? r = "编码已经被占用" : 2005 == i.code && (r = "姓名校验失败"), 2 == i.data.status && (r = "姓名校验失败"), n.UIMgr.getInstance().openUI(u.UIID.UITips, -1, r);
        }
      }, "https://yuema.sfplay.net:8002/rncheck");else {
        var c = "校验失败";
        -1 == i ? c = "身份证长度或格式错误" : -2 == i ? c = "身份证地区非法" : -3 == i ? c = "身份证上的出生日期非法" : -4 == i && (c = "身份证号非法"), n.UIMgr.getInstance().openUI(u.UIID.UITips, -1, c);
      }
    }
  }, t.prototype.getBirthday = function (t) {
    r.HttpMgr.getInstance().httpPost(null, function (e) {
      var o = JSON.parse(e);
      null == o.holiday && 5 != o.type.week && 6 != o.type.week && 1 != o.type.week ? t && t(!1) : t && t(!0);
    }, "https://yuema.sfplay.net:8002/isholiday");
  }, t.prototype.getIsEnjoyTime = function () {
    var t = new Date().getHours();
    return !(t > 20 || t < 21);
  }, t.prototype.sceduleEndGame = function () {
    var t = 1e3 * (60 - new Date().getMinutes());
    c.UIUtils.scheduleOnce(function () {
      i.EventMgr.getInstance().emit("WCNGameEnd", "由于您是未成年只能玩一个小时");
    }, this, t);
  }, e = a([g], t);
}());
o["default"] = d;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcQ2FyZE1nci5qcyJdLCJuYW1lcyI6WyJ0IiwicmVxdWlyZSIsImUiLCJtb2R1bGUiLCJvIiwiZXhwb3J0cyIsImEiLCJfX2RlY29yYXRlIiwiaSIsInIiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJuIiwiT2JqZWN0IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiUmVmbGVjdCIsImRlY29yYXRlIiwicyIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJjIiwibCIsInUiLCJwIiwiY2MiLCJfZGVjb3JhdG9yIiwiZyIsImNjY2xhc3MiLCJkIiwicHJvcGVydHkiLCJ2ZXJpZnlrZXkiLCJ2ZXJpZnlXQ05rZXkiLCJpc1djbiIsImdldEluc3RhbmNlIiwiaW5zdGFuY2UiLCJwcm90b3R5cGUiLCJpc1ZlcmlmeSIsIkNhY2hlVXRpbHMiLCJnZXREYXRhIiwiaXNXQ04iLCJ0b0dhbWUiLCJnZXRCaXJ0aGRheSIsImdldElzRW5qb3lUaW1lIiwic2NlZHVsZUVuZEdhbWUiLCJVSU1nciIsIm9wZW5VSSIsIlVJSUQiLCJVSVRpcHMiLCJFdmVudE1nciIsImVtaXQiLCJ2aWZ5Q2FyZElkIiwiVXRpbHMiLCJpc0NhcmRJRCIsIkh0dHBNZ3IiLCJodHRwUG9zdCIsImFpIiwiRGF0ZSIsImdldFRpbWUiLCJjYXJkSWQiLCJuYW1lIiwiSlNPTiIsInBhcnNlIiwiY29kZSIsImRhdGEiLCJzdGF0dXMiLCJzYXZlRGF0YSIsImNoZWNrQWR1bHQiLCJVSUV4aXQiLCJob2xpZGF5IiwidHlwZSIsIndlZWsiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJVSVV0aWxzIiwic2NoZWR1bGVPbmNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUlBLENBQUMsR0FBR0MsT0FBUjtBQUNBLElBQUlDLENBQUMsR0FBR0MsTUFBUjtBQUNBLElBQUlDLENBQUMsR0FBR0MsT0FBUjs7QUFDQSxJQUFJQyxDQUFDLEdBQUcsVUFBUSxTQUFLQyxVQUFiLElBQ1IsVUFBU1AsQ0FBVCxFQUFZRSxDQUFaLEVBQWVFLENBQWYsRUFBa0JFLENBQWxCLEVBQXFCO0VBQ2pCLElBQUlFLENBQUo7RUFBQSxJQUFPQyxDQUFDLEdBQUdDLFNBQVMsQ0FBQ0MsTUFBckI7RUFBQSxJQUNBQyxDQUFDLEdBQUdILENBQUMsR0FBRyxDQUFKLEdBQVFQLENBQVIsR0FBVyxTQUFTSSxDQUFULEdBQWFBLENBQUMsR0FBR08sTUFBTSxDQUFDQyx3QkFBUCxDQUFnQ1osQ0FBaEMsRUFBbUNFLENBQW5DLENBQWpCLEdBQXlERSxDQUR4RTtFQUVBLElBQUksWUFBWSxPQUFPUyxPQUFuQixJQUE4QixjQUFjLE9BQU9BLE9BQU8sQ0FBQ0MsUUFBL0QsRUFBeUVKLENBQUMsR0FBR0csT0FBTyxDQUFDQyxRQUFSLENBQWlCaEIsQ0FBakIsRUFBb0JFLENBQXBCLEVBQXVCRSxDQUF2QixFQUEwQkUsQ0FBMUIsQ0FBSixDQUF6RSxLQUNLLEtBQUssSUFBSVcsQ0FBQyxHQUFHakIsQ0FBQyxDQUFDVyxNQUFGLEdBQVcsQ0FBeEIsRUFBMkJNLENBQUMsSUFBSSxDQUFoQyxFQUFtQ0EsQ0FBQyxFQUFwQztJQUF1QyxDQUFDVCxDQUFDLEdBQUdSLENBQUMsQ0FBQ2lCLENBQUQsQ0FBTixNQUFlTCxDQUFDLEdBQUcsQ0FBQ0gsQ0FBQyxHQUFHLENBQUosR0FBUUQsQ0FBQyxDQUFDSSxDQUFELENBQVQsR0FBZUgsQ0FBQyxHQUFHLENBQUosR0FBUUQsQ0FBQyxDQUFDTixDQUFELEVBQUlFLENBQUosRUFBT1EsQ0FBUCxDQUFULEdBQXFCSixDQUFDLENBQUNOLENBQUQsRUFBSUUsQ0FBSixDQUF0QyxLQUFpRFEsQ0FBcEU7RUFBdkM7RUFDTCxPQUFPSCxDQUFDLEdBQUcsQ0FBSixJQUFTRyxDQUFULElBQWNDLE1BQU0sQ0FBQ0ssY0FBUCxDQUFzQmhCLENBQXRCLEVBQXlCRSxDQUF6QixFQUE0QlEsQ0FBNUIsQ0FBZCxFQUNQQSxDQURBO0FBRUgsQ0FSRDs7QUFTQUMsTUFBTSxDQUFDSyxjQUFQLENBQXNCZCxDQUF0QixFQUF5QixZQUF6QixFQUF1QztFQUNuQ2UsS0FBSyxFQUFFLENBQUM7QUFEMkIsQ0FBdkM7QUFHQSxJQUFJWCxDQUFDLEdBQUdSLENBQUMsQ0FBQyxVQUFELENBQVQ7QUFBQSxJQUNBUyxDQUFDLEdBQUdULENBQUMsQ0FBQyxTQUFELENBREw7QUFBQSxJQUVBWSxDQUFDLEdBQUdaLENBQUMsQ0FBQyxPQUFELENBRkw7QUFBQSxJQUdBaUIsQ0FBQyxHQUFHakIsQ0FBQyxDQUFDLFlBQUQsQ0FITDtBQUFBLElBSUFvQixDQUFDLEdBQUdwQixDQUFDLENBQUMsU0FBRCxDQUpMO0FBQUEsSUFLQXFCLENBQUMsR0FBR3JCLENBQUMsQ0FBQyxPQUFELENBTEw7QUFBQSxJQU1Bc0IsQ0FBQyxHQUFHdEIsQ0FBQyxDQUFDLFFBQUQsQ0FOTDtBQUFBLElBT0F1QixDQUFDLEdBQUdDLEVBQUUsQ0FBQ0MsVUFQUDtBQUFBLElBUUFDLENBQUMsR0FBR0gsQ0FBQyxDQUFDSSxPQVJOO0FBQUEsSUFTQUMsQ0FBQyxJQUFJTCxDQUFDLENBQUNNLFFBQUYsRUFDTCxZQUFXO0VBQ1AsU0FBUzdCLENBQVQsR0FBYTtJQUNULEtBQUs4QixTQUFMLEdBQWlCLGFBQWpCLEVBQ0EsS0FBS0MsWUFBTCxHQUFvQixpQkFEcEIsRUFFQSxLQUFLQyxLQUFMLEdBQWEsQ0FBQyxDQUZkO0VBR0g7O0VBQ0QsSUFBSTlCLENBQUo7RUFDQSxPQUFPQSxDQUFDLEdBQUdGLENBQUosRUFDUEEsQ0FBQyxDQUFDaUMsV0FBRixHQUFnQixZQUFXO0lBQ3ZCLE9BQU8sUUFBUSxLQUFLQyxRQUFiLEtBQTBCLEtBQUtBLFFBQUwsR0FBZ0IsSUFBSWhDLENBQUosRUFBMUMsR0FDUCxLQUFLZ0MsUUFETDtFQUVILENBSk0sRUFLUGxDLENBQUMsQ0FBQ21DLFNBQUYsQ0FBWUMsUUFBWixHQUF1QixZQUFXO0lBQzlCLE9BQU8sQ0FBQyxDQUFFbkIsQ0FBQyxDQUFDb0IsVUFBRixDQUFhQyxPQUFiLENBQXFCLEtBQUtSLFNBQTFCLENBQVY7RUFDSCxDQVBNLEVBUVA5QixDQUFDLENBQUNtQyxTQUFGLENBQVlJLEtBQVosR0FBb0IsWUFBVztJQUMzQixJQUFJdkMsQ0FBQyxHQUFHaUIsQ0FBQyxDQUFDb0IsVUFBRixDQUFhQyxPQUFiLENBQXFCLEtBQUtQLFlBQTFCLENBQVI7SUFDQSxPQUFPLEVBQUcsQ0FBQy9CLENBQUQsSUFBTSxPQUFPQSxDQUFoQixDQUFQO0VBQ0gsQ0FYTSxFQVlQQSxDQUFDLENBQUNtQyxTQUFGLENBQVlLLE1BQVosR0FBcUIsVUFBU3hDLENBQVQsRUFBWTtJQUM3QixJQUFJRSxDQUFDLEdBQUcsSUFBUjtJQUNBLEtBQUtxQyxLQUFMLEtBQWUsS0FBS0UsV0FBTCxDQUFpQixVQUFTckMsQ0FBVCxFQUFZO01BQ3hDQSxDQUFDLEdBQUdGLENBQUMsQ0FBQ3dDLGNBQUYsTUFBc0IxQyxDQUFDLElBQUlBLENBQUMsRUFBTixFQUFVRSxDQUFDLENBQUN5QyxjQUFGLEVBQVYsRUFBOEIvQixDQUFDLENBQUNnQyxLQUFGLENBQVFYLFdBQVIsR0FBc0JZLE1BQXRCLENBQTZCdkIsQ0FBQyxDQUFDd0IsSUFBRixDQUFPQyxNQUFwQyxFQUE0QyxDQUFDLENBQTdDLEVBQWdELG1CQUFoRCxDQUFwRCxJQUE0SHZDLENBQUMsQ0FBQ3dDLFFBQUYsQ0FBV2YsV0FBWCxHQUF5QmdCLElBQXpCLENBQThCLFlBQTlCLEVBQTRDLG1CQUE1QyxDQUEvSCxHQUFrTXpDLENBQUMsQ0FBQ3dDLFFBQUYsQ0FBV2YsV0FBWCxHQUF5QmdCLElBQXpCLENBQThCLFlBQTlCLEVBQTRDLHNCQUE1QyxDQUFuTTtJQUNILENBRmMsQ0FBZixHQUVLakQsQ0FBQyxJQUFJQSxDQUFDLEVBRlg7RUFHSCxDQWpCTSxFQWtCUEEsQ0FBQyxDQUFDbUMsU0FBRixDQUFZZSxVQUFaLEdBQXlCLFVBQVNsRCxDQUFULEVBQVlFLENBQVosRUFBZUUsQ0FBZixFQUFrQjtJQUN2QyxJQUFJRSxDQUFDLEdBQUcsSUFBUjtJQUNBLElBQUksUUFBUU4sQ0FBUixJQUFhQSxDQUFDLENBQUNXLE1BQUYsSUFBWSxDQUF6QixJQUE4QixRQUFRVCxDQUF0QyxJQUEyQ0EsQ0FBQyxDQUFDUyxNQUFGLElBQVksQ0FBM0QsRUFBOERDLENBQUMsQ0FBQ2dDLEtBQUYsQ0FBUVgsV0FBUixHQUFzQlksTUFBdEIsQ0FBNkJ2QixDQUFDLENBQUN3QixJQUFGLENBQU9DLE1BQXBDLEVBQTRDLENBQUMsQ0FBN0MsRUFBZ0QsTUFBaEQsRUFBOUQsS0FDSztNQUNELElBQUl2QyxDQUFDLEdBQUdhLENBQUMsQ0FBQzhCLEtBQUYsQ0FBUUMsUUFBUixDQUFpQmxELENBQWpCLENBQVI7TUFDQSxJQUFJLEtBQUtNLENBQVQsRUFBWUMsQ0FBQyxDQUFDNEMsT0FBRixDQUFVcEIsV0FBVixHQUF3QnFCLFFBQXhCLENBQWlDO1FBQ3pDQyxFQUFFLEVBQUUsSUFBSUMsSUFBSixHQUFXQyxPQUFYLEtBQXVCLEVBRGM7UUFFekNDLE1BQU0sRUFBRXhELENBRmlDO1FBR3pDeUQsSUFBSSxFQUFFM0Q7TUFIbUMsQ0FBakMsRUFLWixVQUFTQSxDQUFULEVBQVk7UUFDUixJQUFJUSxDQUFDLEdBQUdvRCxJQUFJLENBQUNDLEtBQUwsQ0FBVzdELENBQVgsQ0FBUjtRQUNBLElBQUksT0FBT1EsQ0FBQyxDQUFDc0QsSUFBVCxJQUFpQixLQUFLdEQsQ0FBQyxDQUFDdUQsSUFBRixDQUFPQyxNQUFqQyxFQUF5Qy9DLENBQUMsQ0FBQ29CLFVBQUYsQ0FBYTRCLFFBQWIsQ0FBc0IzRCxDQUFDLENBQUN3QixTQUF4QixFQUFtQyxHQUFuQyxHQUN6Q1QsQ0FBQyxDQUFDOEIsS0FBRixDQUFRZSxVQUFSLENBQW1CaEUsQ0FBbkIsS0FBeUJFLENBQUMsSUFBSUEsQ0FBQyxDQUFDLENBQUMsQ0FBRixDQUFOLEVBQVlhLENBQUMsQ0FBQ29CLFVBQUYsQ0FBYTRCLFFBQWIsQ0FBc0IzRCxDQUFDLENBQUN5QixZQUF4QixFQUFzQyxHQUF0QyxDQUFyQyxLQUFvRmQsQ0FBQyxDQUFDb0IsVUFBRixDQUFhNEIsUUFBYixDQUFzQjNELENBQUMsQ0FBQ3lCLFlBQXhCLEVBQXNDLEdBQXRDLEdBQTRDekIsQ0FBQyxDQUFDMEIsS0FBRixHQUFVLENBQUMsQ0FBdkQsRUFBMEQxQixDQUFDLENBQUNtQyxXQUFGLENBQWMsVUFBU3pDLENBQVQsRUFBWTtVQUNwS0EsQ0FBQyxHQUFHTSxDQUFDLENBQUNvQyxjQUFGLE1BQXNCdEMsQ0FBQyxDQUFDLENBQUMsQ0FBRixDQUFELEVBQU9FLENBQUMsQ0FBQ3FDLGNBQUYsRUFBUCxFQUEyQi9CLENBQUMsQ0FBQ2dDLEtBQUYsQ0FBUVgsV0FBUixHQUFzQlksTUFBdEIsQ0FBNkJ2QixDQUFDLENBQUN3QixJQUFGLENBQU9xQixNQUFwQyxFQUE0QyxDQUFDLENBQTdDLENBQWpELElBQW9HdkQsQ0FBQyxDQUFDZ0MsS0FBRixDQUFRWCxXQUFSLEdBQXNCWSxNQUF0QixDQUE2QnZCLENBQUMsQ0FBQ3dCLElBQUYsQ0FBT3FCLE1BQXBDLEVBQTRDLENBQUMsQ0FBN0MsQ0FBdkcsR0FBeUovRCxDQUFDLElBQUlRLENBQUMsQ0FBQ2dDLEtBQUYsQ0FBUVgsV0FBUixHQUFzQlksTUFBdEIsQ0FBNkJ2QixDQUFDLENBQUN3QixJQUFGLENBQU9xQixNQUFwQyxFQUE0QyxDQUFDLENBQTdDLENBQS9KO1FBQ0gsQ0FGNkksQ0FBOUksQ0FEeUMsQ0FBekMsS0FJSztVQUNELElBQUkxRCxDQUFDLEdBQUcsTUFBUjtVQUNBLFFBQVFELENBQUMsQ0FBQ3NELElBQVYsR0FBaUJyRCxDQUFDLEdBQUcsTUFBckIsR0FBNkIsUUFBUUQsQ0FBQyxDQUFDc0QsSUFBVixHQUFpQnJELENBQUMsR0FBRyxZQUFyQixHQUFtQyxRQUFRRCxDQUFDLENBQUNzRCxJQUFWLEdBQWlCckQsQ0FBQyxHQUFHLFVBQXJCLEdBQWlDLFFBQVFELENBQUMsQ0FBQ3NELElBQVYsR0FBaUJyRCxDQUFDLEdBQUcsWUFBckIsR0FBbUMsUUFBUUQsQ0FBQyxDQUFDc0QsSUFBVixHQUFpQnJELENBQUMsR0FBRyxZQUFyQixHQUFtQyxRQUFRRCxDQUFDLENBQUNzRCxJQUFWLEdBQWlCckQsQ0FBQyxHQUFHLFlBQXJCLEdBQW1DLFFBQVFELENBQUMsQ0FBQ3NELElBQVYsR0FBaUJyRCxDQUFDLEdBQUcsUUFBckIsR0FBK0IsUUFBUUQsQ0FBQyxDQUFDc0QsSUFBVixHQUFpQnJELENBQUMsR0FBRyxXQUFyQixHQUFrQyxRQUFRRCxDQUFDLENBQUNzRCxJQUFWLEdBQWlCckQsQ0FBQyxHQUFHLFlBQXJCLEdBQW1DLFFBQVFELENBQUMsQ0FBQ3NELElBQVYsR0FBaUJyRCxDQUFDLEdBQUcsYUFBckIsR0FBb0MsUUFBUUQsQ0FBQyxDQUFDc0QsSUFBVixHQUFpQnJELENBQUMsR0FBRyxhQUFyQixHQUFvQyxRQUFRRCxDQUFDLENBQUNzRCxJQUFWLEdBQWlCckQsQ0FBQyxHQUFHLFlBQXJCLEdBQW1DLFFBQVFELENBQUMsQ0FBQ3NELElBQVYsR0FBaUJyRCxDQUFDLEdBQUcsWUFBckIsR0FBbUMsUUFBUUQsQ0FBQyxDQUFDc0QsSUFBVixHQUFpQnJELENBQUMsR0FBRyxZQUFyQixHQUFtQyxRQUFRRCxDQUFDLENBQUNzRCxJQUFWLEdBQWlCckQsQ0FBQyxHQUFHLGVBQXJCLEdBQXNDLFFBQVFELENBQUMsQ0FBQ3NELElBQVYsR0FBaUJyRCxDQUFDLEdBQUcsU0FBckIsR0FBZ0MsUUFBUUQsQ0FBQyxDQUFDc0QsSUFBVixLQUFtQnJELENBQUMsR0FBRyxRQUF2QixDQUFyaUIsRUFDQSxLQUFLRCxDQUFDLENBQUN1RCxJQUFGLENBQU9DLE1BQVosS0FBdUJ2RCxDQUFDLEdBQUcsUUFBM0IsQ0FEQSxFQUVBRyxDQUFDLENBQUNnQyxLQUFGLENBQVFYLFdBQVIsR0FBc0JZLE1BQXRCLENBQTZCdkIsQ0FBQyxDQUFDd0IsSUFBRixDQUFPQyxNQUFwQyxFQUE0QyxDQUFDLENBQTdDLEVBQWdEdEMsQ0FBaEQsQ0FGQTtRQUdIO01BQ0osQ0FqQlcsRUFrQlosdUNBbEJZLEVBQVosS0FtQks7UUFDRCxJQUFJVyxDQUFDLEdBQUcsTUFBUjtRQUFnQixDQUFFLENBQUYsSUFBT1osQ0FBUCxHQUFXWSxDQUFDLEdBQUcsWUFBZixHQUE2QixDQUFDLENBQUQsSUFBTVosQ0FBTixHQUFVWSxDQUFDLEdBQUcsU0FBZCxHQUF5QixDQUFDLENBQUQsSUFBTVosQ0FBTixHQUFVWSxDQUFDLEdBQUcsYUFBZCxHQUE2QixDQUFDLENBQUQsSUFBTVosQ0FBTixLQUFZWSxDQUFDLEdBQUcsUUFBaEIsQ0FBbkYsRUFDaEJSLENBQUMsQ0FBQ2dDLEtBQUYsQ0FBUVgsV0FBUixHQUFzQlksTUFBdEIsQ0FBNkJ2QixDQUFDLENBQUN3QixJQUFGLENBQU9DLE1BQXBDLEVBQTRDLENBQUMsQ0FBN0MsRUFBZ0QzQixDQUFoRCxDQURnQjtNQUVuQjtJQUNKO0VBQ0osQ0EvQ00sRUFnRFBwQixDQUFDLENBQUNtQyxTQUFGLENBQVlNLFdBQVosR0FBMEIsVUFBU3pDLENBQVQsRUFBWTtJQUNsQ1MsQ0FBQyxDQUFDNEMsT0FBRixDQUFVcEIsV0FBVixHQUF3QnFCLFFBQXhCLENBQWlDLElBQWpDLEVBQ0EsVUFBU3BELENBQVQsRUFBWTtNQUNSLElBQUlFLENBQUMsR0FBR3dELElBQUksQ0FBQ0MsS0FBTCxDQUFXM0QsQ0FBWCxDQUFSO01BQ0EsUUFBUUUsQ0FBQyxDQUFDZ0UsT0FBVixJQUFxQixLQUFLaEUsQ0FBQyxDQUFDaUUsSUFBRixDQUFPQyxJQUFqQyxJQUF5QyxLQUFLbEUsQ0FBQyxDQUFDaUUsSUFBRixDQUFPQyxJQUFyRCxJQUE2RCxLQUFLbEUsQ0FBQyxDQUFDaUUsSUFBRixDQUFPQyxJQUF6RSxHQUFnRnRFLENBQUMsSUFBSUEsQ0FBQyxDQUFDLENBQUMsQ0FBRixDQUF0RixHQUE2RkEsQ0FBQyxJQUFJQSxDQUFDLENBQUMsQ0FBQyxDQUFGLENBQW5HO0lBQ0gsQ0FKRCxFQUtBLHlDQUxBO0VBTUgsQ0F2RE0sRUF3RFBBLENBQUMsQ0FBQ21DLFNBQUYsQ0FBWU8sY0FBWixHQUE2QixZQUFXO0lBQ3BDLElBQUkxQyxDQUFDLEdBQUcsSUFBSXdELElBQUosR0FBV2UsUUFBWCxFQUFSO0lBQ0EsT0FBTyxFQUFHdkUsQ0FBQyxHQUFHLEVBQUosSUFBVUEsQ0FBQyxHQUFHLEVBQWpCLENBQVA7RUFDSCxDQTNETSxFQTREUEEsQ0FBQyxDQUFDbUMsU0FBRixDQUFZUSxjQUFaLEdBQTZCLFlBQVc7SUFDcEMsSUFBSTNDLENBQUMsR0FBRyxPQUFPLEtBQUssSUFBSXdELElBQUosR0FBV2dCLFVBQVgsRUFBWixDQUFSO0lBQ0FwRCxDQUFDLENBQUNxRCxPQUFGLENBQVVDLFlBQVYsQ0FBdUIsWUFBVztNQUM5QmxFLENBQUMsQ0FBQ3dDLFFBQUYsQ0FBV2YsV0FBWCxHQUF5QmdCLElBQXpCLENBQThCLFlBQTlCLEVBQTRDLGdCQUE1QztJQUNILENBRkQsRUFHQSxJQUhBLEVBR01qRCxDQUhOO0VBSUgsQ0FsRU0sRUFtRVBFLENBQUMsR0FBR0ksQ0FBQyxDQUFDLENBQUNvQixDQUFELENBQUQsRUFBTTFCLENBQU4sQ0FuRUw7QUFvRUgsQ0EzRUQsRUFEQyxDQVREO0FBc0ZBSSxDQUFDLFdBQUQsR0FBWXdCLENBQVoiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbInZhciB0ID0gcmVxdWlyZTtcbnZhciBlID0gbW9kdWxlO1xudmFyIG8gPSBleHBvcnRzO1xudmFyIGEgPSB0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSB8fFxuZnVuY3Rpb24odCwgZSwgbywgYSkge1xuICAgIHZhciBpLCByID0gYXJndW1lbnRzLmxlbmd0aCxcbiAgICBuID0gciA8IDMgPyBlOiBudWxsID09PSBhID8gYSA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSwgbykgOiBhO1xuICAgIGlmIChcIm9iamVjdFwiID09IHR5cGVvZiBSZWZsZWN0ICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSkgbiA9IFJlZmxlY3QuZGVjb3JhdGUodCwgZSwgbywgYSk7XG4gICAgZWxzZSBmb3IgKHZhciBzID0gdC5sZW5ndGggLSAxOyBzID49IDA7IHMtLSkoaSA9IHRbc10pICYmIChuID0gKHIgPCAzID8gaShuKSA6IHIgPiAzID8gaShlLCBvLCBuKSA6IGkoZSwgbykpIHx8IG4pO1xuICAgIHJldHVybiByID4gMyAmJiBuICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCBvLCBuKSxcbiAgICBuXG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6ICEwXG59KTtcbnZhciBpID0gdChcIkV2ZW50TWdyXCIpLFxuciA9IHQoXCJIdHRwTWdyXCIpLFxubiA9IHQoXCJVSU1nclwiKSxcbnMgPSB0KFwiQ2FjaGVVdGlsc1wiKSxcbmMgPSB0KFwiVUlVdGlsc1wiKSxcbmwgPSB0KFwiVXRpbHNcIiksXG51ID0gdChcIkNvbmZpZ1wiKSxcbnAgPSBjYy5fZGVjb3JhdG9yLFxuZyA9IHAuY2NjbGFzcyxcbmQgPSAocC5wcm9wZXJ0eSxcbmZ1bmN0aW9uKCkge1xuICAgIGZ1bmN0aW9uIHQoKSB7XG4gICAgICAgIHRoaXMudmVyaWZ5a2V5ID0gXCJyZWFsTmFtZV9zZlwiLFxuICAgICAgICB0aGlzLnZlcmlmeVdDTmtleSA9IFwicmVhbE5hbWVfc2Zfd2NuXCIsXG4gICAgICAgIHRoaXMuaXNXY24gPSAhMVxuICAgIH1cbiAgICB2YXIgZTtcbiAgICByZXR1cm4gZSA9IHQsXG4gICAgdC5nZXRJbnN0YW5jZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gbnVsbCA9PSB0aGlzLmluc3RhbmNlICYmICh0aGlzLmluc3RhbmNlID0gbmV3IGUpLFxuICAgICAgICB0aGlzLmluc3RhbmNlXG4gICAgfSxcbiAgICB0LnByb3RvdHlwZS5pc1ZlcmlmeSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gISEgcy5DYWNoZVV0aWxzLmdldERhdGEodGhpcy52ZXJpZnlrZXkpXG4gICAgfSxcbiAgICB0LnByb3RvdHlwZS5pc1dDTiA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgdCA9IHMuQ2FjaGVVdGlscy5nZXREYXRhKHRoaXMudmVyaWZ5V0NOa2V5KTtcbiAgICAgICAgcmV0dXJuICEgKCF0IHx8IFwiMVwiICE9IHQpXG4gICAgfSxcbiAgICB0LnByb3RvdHlwZS50b0dhbWUgPSBmdW5jdGlvbih0KSB7XG4gICAgICAgIHZhciBlID0gdGhpcztcbiAgICAgICAgdGhpcy5pc1dDTigpID8gdGhpcy5nZXRCaXJ0aGRheShmdW5jdGlvbihvKSB7XG4gICAgICAgICAgICBvID8gZS5nZXRJc0Vuam95VGltZSgpID8gKHQgJiYgdCgpLCBlLnNjZWR1bGVFbmRHYW1lKCksIG4uVUlNZ3IuZ2V0SW5zdGFuY2UoKS5vcGVuVUkodS5VSUlELlVJVGlwcywgLTEsIFwi5pyq5oiQ5bm05Y+q6IO95Zyo5pma5LiKOC0554K5546p5LiA5Liq5bCP5pe2XCIpKSA6IGkuRXZlbnRNZ3IuZ2V0SW5zdGFuY2UoKS5lbWl0KFwiV0NOR2FtZUVuZFwiLCBcIuacquaIkOW5tOWPquiDveWcqOaZmuS4ijgtOeeCueeOqeS4gOS4quWwj+aXtlwiKSA6IGkuRXZlbnRNZ3IuZ2V0SW5zdGFuY2UoKS5lbWl0KFwiV0NOR2FtZUVuZFwiLCBcIuacquaIkOW5tOWPquacieWRqOS6lO+8jOWRqOWFre+8jOWRqOaXpeWSjOiKguWBh+aXpeaJjeiDveeOqVwiKVxuICAgICAgICB9KSA6IHQgJiYgdCgpXG4gICAgfSxcbiAgICB0LnByb3RvdHlwZS52aWZ5Q2FyZElkID0gZnVuY3Rpb24odCwgZSwgbykge1xuICAgICAgICB2YXIgYSA9IHRoaXM7XG4gICAgICAgIGlmIChudWxsID09IHQgfHwgdC5sZW5ndGggPD0gMCB8fCBudWxsID09IGUgfHwgZS5sZW5ndGggPD0gMCkgbi5VSU1nci5nZXRJbnN0YW5jZSgpLm9wZW5VSSh1LlVJSUQuVUlUaXBzLCAtMSwgXCLkuI3og73kuLrnqbpcIik7XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdmFyIGkgPSBsLlV0aWxzLmlzQ2FyZElEKGUpO1xuICAgICAgICAgICAgaWYgKDAgPT0gaSkgci5IdHRwTWdyLmdldEluc3RhbmNlKCkuaHR0cFBvc3Qoe1xuICAgICAgICAgICAgICAgIGFpOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSArIFwiXCIsXG4gICAgICAgICAgICAgICAgY2FyZElkOiBlLFxuICAgICAgICAgICAgICAgIG5hbWU6IHRcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgICAgICAgdmFyIGkgPSBKU09OLnBhcnNlKHQpO1xuICAgICAgICAgICAgICAgIGlmICgyMDAgPT0gaS5jb2RlICYmIDAgPT0gaS5kYXRhLnN0YXR1cykgcy5DYWNoZVV0aWxzLnNhdmVEYXRhKGEudmVyaWZ5a2V5LCBcIjFcIiksXG4gICAgICAgICAgICAgICAgbC5VdGlscy5jaGVja0FkdWx0KGUpID8gKG8gJiYgbyghMCksIHMuQ2FjaGVVdGlscy5zYXZlRGF0YShhLnZlcmlmeVdDTmtleSwgXCIwXCIpKSA6IChzLkNhY2hlVXRpbHMuc2F2ZURhdGEoYS52ZXJpZnlXQ05rZXksIFwiMVwiKSwgYS5pc1djbiA9ICEwLCBhLmdldEJpcnRoZGF5KGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICAgICAgICAgICAgdCA/IGEuZ2V0SXNFbmpveVRpbWUoKSA/IChvKCEwKSwgYS5zY2VkdWxlRW5kR2FtZSgpLCBuLlVJTWdyLmdldEluc3RhbmNlKCkub3BlblVJKHUuVUlJRC5VSUV4aXQsIC0xKSkgOiBuLlVJTWdyLmdldEluc3RhbmNlKCkub3BlblVJKHUuVUlJRC5VSUV4aXQsIC0xKSA6IG8gJiYgbi5VSU1nci5nZXRJbnN0YW5jZSgpLm9wZW5VSSh1LlVJSUQuVUlFeGl0LCAtMSlcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByID0gXCLmoKHpqozlpLHotKVcIjtcbiAgICAgICAgICAgICAgICAgICAgMTAwMSA9PSBpLmNvZGUgPyByID0gXCLns7vnu5/plJnor69cIjogMTAwMiA9PSBpLmNvZGUgPyByID0gXCLmjqXlj6Por7fmsYLnmoTotYTmupDkuI3lrZjlnKhcIjogMTAwMyA9PSBpLmNvZGUgPyByID0gXCLmjqXlj6Por7fmsYLmlrnlvI/plJnor69cIjogMTAwNCA9PSBpLmNvZGUgPyByID0gXCLmjqXlj6Por7fmsYLmoLjlv4Plj4LmlbDnvLrlpLFcIjogMTAwNSA9PSBpLmNvZGUgPyByID0gXCLmjqXlj6Por7fmsYJJUOWcsOWdgOmdnuazlVwiOiAxMDA2ID09IGkuY29kZSA/IHIgPSBcIuaOpeWPo+ivt+axgui2heWHuua1gemHj+mZkOWItlwiOiAxMDA3ID09IGkuY29kZSA/IHIgPSBcIuaOpeWPo+ivt+axgui/h+acn1wiOiAxMDA4ID09IGkuY29kZSA/IHIgPSBcIuaOpeWPo+ivt+axguaWuei6q+S7vemdnuazlVwiOiAxMDA5ID09IGkuY29kZSA/IHIgPSBcIuaOpeWPo+ivt+axguaWueadg+mZkOacquWQr+eUqFwiOiAxMDEwID09IGkuY29kZSA/IHIgPSBcIuaOpeWPo+ivt+axguaWueaXoOivpeaOpeWPo+adg+mZkFwiOiAxMDExID09IGkuY29kZSA/IHIgPSBcIuaOpeWPo+ivt+axguaWuei6q+S7veaguOmqjOmUmeivr1wiOiAxMDEyID09IGkuY29kZSA/IHIgPSBcIuaOpeWPo+ivt+axguaKpeaWh+aguOmqjOWksei0pVwiOiAyMDAxID09IGkuY29kZSA/IHIgPSBcIui6q+S7veivgeWPt+agvOW8j+agoemqjOWksei0pVwiOiAyMDAyID09IGkuY29kZSA/IHIgPSBcIuWunuWQjeiupOivgeadoeebruW3sui+vuS4iumZkFwiOiAyMDAzID09IGkuY29kZSA/IHIgPSBcIuaXoOivpee8lueggeaPkOS6pOeahOWunuWQjeiupOivgeiusOW9lVwiOiAyMDA0ID09IGkuY29kZSA/IHIgPSBcIue8lueggeW3sue7j+iiq+WNoOeUqFwiOiAyMDA1ID09IGkuY29kZSAmJiAociA9IFwi5aeT5ZCN5qCh6aqM5aSx6LSlXCIpLFxuICAgICAgICAgICAgICAgICAgICAyID09IGkuZGF0YS5zdGF0dXMgJiYgKHIgPSBcIuWnk+WQjeagoemqjOWksei0pVwiKSxcbiAgICAgICAgICAgICAgICAgICAgbi5VSU1nci5nZXRJbnN0YW5jZSgpLm9wZW5VSSh1LlVJSUQuVUlUaXBzLCAtMSwgcilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJodHRwczovL3l1ZW1hLnNmcGxheS5uZXQ6ODAwMi9ybmNoZWNrXCIpO1xuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIGMgPSBcIuagoemqjOWksei0pVwiOyAtIDEgPT0gaSA/IGMgPSBcIui6q+S7veivgemVv+W6puaIluagvOW8j+mUmeivr1wiOiAtMiA9PSBpID8gYyA9IFwi6Lqr5Lu96K+B5Zyw5Yy66Z2e5rOVXCI6IC0zID09IGkgPyBjID0gXCLouqvku73or4HkuIrnmoTlh7rnlJ/ml6XmnJ/pnZ7ms5VcIjogLTQgPT0gaSAmJiAoYyA9IFwi6Lqr5Lu96K+B5Y+36Z2e5rOVXCIpLFxuICAgICAgICAgICAgICAgIG4uVUlNZ3IuZ2V0SW5zdGFuY2UoKS5vcGVuVUkodS5VSUlELlVJVGlwcywgLTEsIGMpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LFxuICAgIHQucHJvdG90eXBlLmdldEJpcnRoZGF5ID0gZnVuY3Rpb24odCkge1xuICAgICAgICByLkh0dHBNZ3IuZ2V0SW5zdGFuY2UoKS5odHRwUG9zdChudWxsLFxuICAgICAgICBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICB2YXIgbyA9IEpTT04ucGFyc2UoZSk7XG4gICAgICAgICAgICBudWxsID09IG8uaG9saWRheSAmJiA1ICE9IG8udHlwZS53ZWVrICYmIDYgIT0gby50eXBlLndlZWsgJiYgMSAhPSBvLnR5cGUud2VlayA/IHQgJiYgdCghMSkgOiB0ICYmIHQoITApXG4gICAgICAgIH0sXG4gICAgICAgIFwiaHR0cHM6Ly95dWVtYS5zZnBsYXkubmV0OjgwMDIvaXNob2xpZGF5XCIpXG4gICAgfSxcbiAgICB0LnByb3RvdHlwZS5nZXRJc0Vuam95VGltZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgdCA9IG5ldyBEYXRlKCkuZ2V0SG91cnMoKTtcbiAgICAgICAgcmV0dXJuICEgKHQgPiAyMCB8fCB0IDwgMjEpXG4gICAgfSxcbiAgICB0LnByb3RvdHlwZS5zY2VkdWxlRW5kR2FtZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgdCA9IDFlMyAqICg2MCAtIG5ldyBEYXRlKCkuZ2V0TWludXRlcygpKTtcbiAgICAgICAgYy5VSVV0aWxzLnNjaGVkdWxlT25jZShmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGkuRXZlbnRNZ3IuZ2V0SW5zdGFuY2UoKS5lbWl0KFwiV0NOR2FtZUVuZFwiLCBcIueUseS6juaCqOaYr+acquaIkOW5tOWPquiDveeOqeS4gOS4quWwj+aXtlwiKVxuICAgICAgICB9LFxuICAgICAgICB0aGlzLCB0KVxuICAgIH0sXG4gICAgZSA9IGEoW2ddLCB0KVxufSAoKSk7XG5vLmRlZmF1bHQgPSBkIl19