
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/scripts/SkillMgr.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'df304j21DNOc7gKPka3XN9T', 'SkillMgr');
// scripts/SkillMgr.js

"use strict";

var t = require;
var e = module;
var o = exports;
Object.defineProperty(o, "__esModule", {
  value: !0
});

var a = t("UIMgr"),
    i = t("Utils"),
    r = t("Config"),
    n = t("DataMgr"),
    s = t("FetterMgr"),
    c = t("GameDataMgr"),
    l = t("GoodsManager"),
    u = t("PlayerMgr"),
    p = function () {
  function t() {}

  return t.getAtkSkillId = function () {
    for (var t = [], e = 0, o = c["default"].getInstance().getSkillIdArr(), a = 0; a < o.length; a++) {
      var r = n.DataMgr.getInstance().getSkill(o[a]),
          l = null,
          p = u.PlayerMgr.getInstance().geUserData();
      if (1 == p.getCurSec() && 1 == p.getEnterFirstSecCount()) l = {
        id: o[a],
        weight: 60
      };else {
        var g = r.skillWeight;
        s["default"].getInstance().isHaveMasterFetter() && (g += s["default"].getInstance().getAddSkillAndHurtProp() / 100 * g), l = {
          id: o[a],
          weight: g
        };
      }
      l && (e += l.weight), l && t.push(l);
    }

    return i.Utils.weight_randSingle(e) ? i.Utils.weight_rand(t).id : 0;
  }, t.isOverLevelForSkillBook = function (t) {
    var e = n.DataMgr.getInstance().getSkillBook(t),
        o = n.DataMgr.getInstance().getSkillQuality(e.qualityId),
        s = i.Utils.getTabelArr(o.FullGradeCompensate);
    u.PlayerMgr.getInstance().geUserData().getSkillBookForId(t).level >= e.MaxLevel && (u.PlayerMgr.getInstance().geUserData().subSkillBookCount(e.id), l["default"].getInstance().getRewardForType(Number(s[0]), Number(s[1])), a.UIMgr.getInstance().openUI(r.UIID.UITips, -1, "已达到最大等级，自动转化为 金币x" + s[1]));
  }, t;
}();

o["default"] = p;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcc2NyaXB0c1xcU2tpbGxNZ3IuanMiXSwibmFtZXMiOlsidCIsInJlcXVpcmUiLCJlIiwibW9kdWxlIiwibyIsImV4cG9ydHMiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiYSIsImkiLCJyIiwibiIsInMiLCJjIiwibCIsInUiLCJwIiwiZ2V0QXRrU2tpbGxJZCIsImdldEluc3RhbmNlIiwiZ2V0U2tpbGxJZEFyciIsImxlbmd0aCIsIkRhdGFNZ3IiLCJnZXRTa2lsbCIsIlBsYXllck1nciIsImdlVXNlckRhdGEiLCJnZXRDdXJTZWMiLCJnZXRFbnRlckZpcnN0U2VjQ291bnQiLCJpZCIsIndlaWdodCIsImciLCJza2lsbFdlaWdodCIsImlzSGF2ZU1hc3RlckZldHRlciIsImdldEFkZFNraWxsQW5kSHVydFByb3AiLCJwdXNoIiwiVXRpbHMiLCJ3ZWlnaHRfcmFuZFNpbmdsZSIsIndlaWdodF9yYW5kIiwiaXNPdmVyTGV2ZWxGb3JTa2lsbEJvb2siLCJnZXRTa2lsbEJvb2siLCJnZXRTa2lsbFF1YWxpdHkiLCJxdWFsaXR5SWQiLCJnZXRUYWJlbEFyciIsIkZ1bGxHcmFkZUNvbXBlbnNhdGUiLCJnZXRTa2lsbEJvb2tGb3JJZCIsImxldmVsIiwiTWF4TGV2ZWwiLCJzdWJTa2lsbEJvb2tDb3VudCIsImdldFJld2FyZEZvclR5cGUiLCJOdW1iZXIiLCJVSU1nciIsIm9wZW5VSSIsIlVJSUQiLCJVSVRpcHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsQ0FBQyxHQUFHQyxPQUFSO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxNQUFSO0FBQ0EsSUFBSUMsQ0FBQyxHQUFHQyxPQUFSO0FBQ0FDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkgsQ0FBdEIsRUFBeUIsWUFBekIsRUFBdUM7RUFDbkNJLEtBQUssRUFBRSxDQUFDO0FBRDJCLENBQXZDOztBQUdBLElBQUlDLENBQUMsR0FBR1QsQ0FBQyxDQUFDLE9B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VUFBMUIsR0FBdUNtQixpQkFBdkMsQ0FBeUQ1QyxDQUF6RCxFQUE0RDZDLEtBQTVELElBQXFFM0MsQ0FBQyxDQUFDNEMsUUFBdkUsS0FBb0Y5QixDQUFDLENBQUNRLFNBQUYsQ0FBWUwsV0FBWixHQUEwQk0sVUFBMUIsR0FBdUNzQixpQkFBdkMsQ0FBeUQ3QyxDQUFDLENBQUMwQixFQUEzRCxHQUFnRWIsQ0FBQyxXQUFELENBQVVJLFdBQVYsR0FBd0I2QixnQkFBeEIsQ0FBeUNDLE1BQU0sQ0FBQ3BDLENBQUMsQ0FBQyxDQUFELENBQUYsQ0FBL0MsRUFBdURvQyxNQUFNLENBQUNwQyxDQUFDLENBQUMsQ0FBRCxDQUFGLENBQTdELENBQWhFLEVBQXNJSixDQUFDLENBQUN5QyxLQUFGLENBQVEvQixXQUFSLEdBQXNCZ0MsTUFBdEIsQ0FBNkJ4QyxDQUFDLENBQUN5QyxJQUFGLENBQU9DLE1BQXBDLEVBQTRDLENBQUMsQ0FBN0MsRUFBZ0Qsc0JBQXNCeEMsQ0FBQyxDQUFDLENBQUQsQ0FBdkUsQ0FBMU47RUFDSCxDQTNCTSxFQTRCUGIsQ0E1QkE7QUE2QkgsQ0EvQkcsRUFSSjs7QUF3Q0FJLENBQUMsV0FBRCxHQUFZYSxDQUFaIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdCA9IHJlcXVpcmU7XG52YXIgZSA9IG1vZHVsZTtcbnZhciBvID0gZXhwb3J0cztcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiAhMFxufSk7XG52YXIgYSA9IHQoXCJVSU1nclwiKSxcbmkgPSB0KFwiVXRpbHNcIiksXG5yID0gdChcIkNvbmZpZ1wiKSxcbm4gPSB0KFwiRGF0YU1nclwiKSxcbnMgPSB0KFwiRmV0dGVyTWdyXCIpLFxuYyA9IHQoXCJHYW1lRGF0YU1nclwiKSxcbmwgPSB0KFwiR29vZHNNYW5hZ2VyXCIpLFxudSA9IHQoXCJQbGF5ZXJNZ3JcIiksXG5wID0gZnVuY3Rpb24oKSB7XG4gICAgZnVuY3Rpb24gdCgpIHt9XG4gICAgcmV0dXJuIHQuZ2V0QXRrU2tpbGxJZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBmb3IgKHZhciB0ID0gW10sIGUgPSAwLCBvID0gYy5kZWZhdWx0LmdldEluc3RhbmNlKCkuZ2V0U2tpbGxJZEFycigpLCBhID0gMDsgYSA8IG8ubGVuZ3RoOyBhKyspIHtcbiAgICAgICAgICAgIHZhciByID0gbi5EYXRhTWdyLmdldEluc3RhbmNlKCkuZ2V0U2tpbGwob1thXSksXG4gICAgICAgICAgICBsID0gbnVsbCxcbiAgICAgICAgICAgIHAgPSB1LlBsYXllck1nci5nZXRJbnN0YW5jZSgpLmdlVXNlckRhdGEoKTtcbiAgICAgICAgICAgIGlmICgxID09IHAuZ2V0Q3VyU2VjKCkgJiYgMSA9PSBwLmdldEVudGVyRmlyc3RTZWNDb3VudCgpKSBsID0ge1xuICAgICAgICAgICAgICAgIGlkOiBvW2FdLFxuICAgICAgICAgICAgICAgIHdlaWdodDogNjBcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgZyA9IHIuc2tpbGxXZWlnaHQ7XG4gICAgICAgICAgICAgICAgcy5kZWZhdWx0LmdldEluc3RhbmNlKCkuaXNIYXZlTWFzdGVyRmV0dGVyKCkgJiYgKGcgKz0gcy5kZWZhdWx0LmdldEluc3RhbmNlKCkuZ2V0QWRkU2tpbGxBbmRIdXJ0UHJvcCgpIC8gMTAwICogZyksXG4gICAgICAgICAgICAgICAgbCA9IHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IG9bYV0sXG4gICAgICAgICAgICAgICAgICAgIHdlaWdodDogZ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGwgJiYgKGUgKz0gbC53ZWlnaHQpLFxuICAgICAgICAgICAgbCAmJiB0LnB1c2gobClcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaS5VdGlscy53ZWlnaHRfcmFuZFNpbmdsZShlKSA/IGkuVXRpbHMud2VpZ2h0X3JhbmQodCkuaWQ6IDBcbiAgICB9LFxuICAgIHQuaXNPdmVyTGV2ZWxGb3JTa2lsbEJvb2sgPSBmdW5jdGlvbih0KSB7XG4gICAgICAgIHZhciBlID0gbi5EYXRhTWdyLmdldEluc3RhbmNlKCkuZ2V0U2tpbGxCb29rKHQpLFxuICAgICAgICBvID0gbi5EYXRhTWdyLmdldEluc3RhbmNlKCkuZ2V0U2tpbGxRdWFsaXR5KGUucXVhbGl0eUlkKSxcbiAgICAgICAgcyA9IGkuVXRpbHMuZ2V0VGFiZWxBcnIoby5GdWxsR3JhZGVDb21wZW5zYXRlKTtcbiAgICAgICAgdS5QbGF5ZXJNZ3IuZ2V0SW5zdGFuY2UoKS5nZVVzZXJEYXRhKCkuZ2V0U2tpbGxCb29rRm9ySWQodCkubGV2ZWwgPj0gZS5NYXhMZXZlbCAmJiAodS5QbGF5ZXJNZ3IuZ2V0SW5zdGFuY2UoKS5nZVVzZXJEYXRhKCkuc3ViU2tpbGxCb29rQ291bnQoZS5pZCksIGwuZGVmYXVsdC5nZXRJbnN0YW5jZSgpLmdldFJld2FyZEZvclR5cGUoTnVtYmVyKHNbMF0pLCBOdW1iZXIoc1sxXSkpLCBhLlVJTWdyLmdldEluc3RhbmNlKCkub3BlblVJKHIuVUlJRC5VSVRpcHMsIC0xLCBcIuW3sui+vuWIsOacgOWkp+etiee6p++8jOiHquWKqOi9rOWMluS4uiDph5HluIF4XCIgKyBzWzFdKSlcbiAgICB9LFxuICAgIHRcbn0gKCk7XG5vLmRlZmF1bHQgPSBwIl19